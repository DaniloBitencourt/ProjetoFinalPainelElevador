

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Dec 17 15:38:25 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F4520 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	smallconst
    72  000600                     __psmallconst:
    73                           	callstack 0
    74  000600  00                 	db	0
    75  000601                     _valor:
    76                           	callstack 0
    77  000601  3F                 	db	63
    78  000602  06                 	db	6
    79  000603  5B                 	db	91
    80  000604  4F                 	db	79
    81  000605  66                 	db	102
    82  000606  6D                 	db	109
    83  000607  7D                 	db	125
    84  000608  07                 	db	7
    85  000609  7F                 	db	127
    86  00060A  6F                 	db	111
    87  00060B  77                 	db	119
    88  00060C  7C                 	db	124
    89  00060D  39                 	db	57
    90  00060E  5E                 	db	94
    91  00060F  79                 	db	121
    92  000610  71                 	db	113
    93  000611                     __end_of_valor:
    94                           	callstack 0
    95  000611                     _charKey:
    96                           	callstack 0
    97  000611  55                 	db	85
    98  000612  4C                 	db	76
    99  000613  44                 	db	68
   100  000614  52                 	db	82
   101  000615  53                 	db	83
   102  000616  58                 	db	88
   103  000617  41                 	db	65
   104  000618  42                 	db	66
   105  000619  59                 	db	89
   106  00061A  73                 	db	115
   107  00061B                     __end_of_charKey:
   108                           	callstack 0
   109  00061B                     _leds:
   110                           	callstack 0
   111  00061B  01                 	db	1
   112  00061C  02                 	db	2
   113  00061D  04                 	db	4
   114  00061E  08                 	db	8
   115  00061F                     __end_of_leds:
   116                           	callstack 0
   117  0000                     _ADCON1	set	4033
   118  0000                     _TRISE	set	3990
   119  0000                     _TRISD	set	3989
   120  0000                     _TRISC	set	3988
   121  0000                     _TRISB	set	3987
   122  0000                     _TRISA	set	3986
   123  0000                     _PORTE	set	3972
   124  0000                     _PORTD	set	3971
   125  0000                     _PORTC	set	3970
   126  0000                     _PORTB	set	3969
   127  0000                     _PORTA	set	3968
   128  00061F                     STR_1:
   129  00061F  45                 	db	69	;'E'
   130  000620  73                 	db	115	;'s'
   131  000621  63                 	db	99	;'c'
   132  000622  6F                 	db	111	;'o'
   133  000623  6C                 	db	108	;'l'
   134  000624  68                 	db	104	;'h'
   135  000625  61                 	db	97	;'a'
   136  000626  20                 	db	32
   137  000627  6F                 	db	111	;'o'
   138  000628  20                 	db	32
   139  000629  61                 	db	97	;'a'
   140  00062A  6E                 	db	110	;'n'
   141  00062B  64                 	db	100	;'d'
   142  00062C  61                 	db	97	;'a'
   143  00062D  72                 	db	114	;'r'
   144  00062E  20                 	db	32
   145  00062F  64                 	db	100	;'d'
   146  000630  65                 	db	101	;'e'
   147  000631  73                 	db	115	;'s'
   148  000632  65                 	db	101	;'e'
   149  000633  6A                 	db	106	;'j'
   150  000634  61                 	db	97	;'a'
   151  000635  64                 	db	100	;'d'
   152  000636  6F                 	db	111	;'o'
   153  000637  0A                 	db	10
   154  000638  70                 	db	112	;'p'
   155  000639  65                 	db	101	;'e'
   156  00063A  6C                 	db	108	;'l'
   157  00063B  6F                 	db	111	;'o'
   158  00063C  20                 	db	32
   159  00063D  74                 	db	116	;'t'
   160  00063E  65                 	db	101	;'e'
   161  00063F  63                 	db	99	;'c'
   162  000640  6C                 	db	108	;'l'
   163  000641  61                 	db	97	;'a'
   164  000642  64                 	db	100	;'d'
   165  000643  6F                 	db	111	;'o'
   166  000644  00                 	db	0
   167  000645  00                 	db	0	; dummy byte at the end
   168  0000                     
   169                           ; #config settings
   170                           
   171                           	psect	cinit
   172  001328                     __pcinit:
   173                           	callstack 0
   174  001328                     start_initialization:
   175                           	callstack 0
   176  001328                     __initialization:
   177                           	callstack 0
   178                           
   179                           ; Clear objects allocated to COMRAM (7 bytes)
   180  001328  EE00  F01B         	lfsr	0,__pbssCOMRAM
   181  00132C  0E07               	movlw	7
   182  00132E                     clear_0:
   183  00132E  6AEE               	clrf	postinc0,c
   184  001330  06E8               	decf	wreg,f,c
   185  001332  E1FD               	bnz	clear_0
   186  001334                     end_of_initialization:
   187                           	callstack 0
   188  001334                     __end_of__initialization:
   189                           	callstack 0
   190  001334  0E00               	movlw	low (__Lsmallconst shr (0+16))
   191  001336  6EF8               	movwf	tblptru,c
   192  001338  0E06               	movlw	high __Lsmallconst
   193  00133A  6EF7               	movwf	tblptrh,c
   194  00133C  0100               	movlb	0
   195  00133E  EFC1  F006         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMRAM
   198  00001B                     __pbssCOMRAM:
   199                           	callstack 0
   200  00001B                     kpDebounce@oldRead:
   201                           	callstack 0
   202  00001B                     	ds	2
   203  00001D                     kpDebounce@newRead:
   204                           	callstack 0
   205  00001D                     	ds	2
   206  00001F                     _keys:
   207                           	callstack 0
   208  00001F                     	ds	2
   209  000021                     kpDebounce@tempo:
   210                           	callstack 0
   211  000021                     	ds	1
   212                           
   213                           	psect	cstackCOMRAM
   214  000001                     __pcstackCOMRAM:
   215                           	callstack 0
   216  000001                     ??_kpReadKey:
   217  000001                     ?_digitalRead:
   218                           	callstack 0
   219  000001                     ?_kpRead:
   220                           	callstack 0
   221  000001                     atraso@x:
   222                           	callstack 0
   223  000001                     digitalWrite@pin:
   224                           	callstack 0
   225  000001                     digitalRead@pin:
   226                           	callstack 0
   227  000001                     pinMode@pin:
   228                           	callstack 0
   229  000001                     delayMicro@a:
   230                           	callstack 0
   231  000001                     delayMili@a:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x0
   235  000001                     	ds	1
   236  000002                     atraso@i:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x1
   240  000002                     	ds	1
   241  000003                     ??_digitalRead:
   242  000003                     ??_delayMili:
   243  000003                     digitalWrite@value:
   244                           	callstack 0
   245  000003                     pinMode@type:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x2
   249  000003                     	ds	1
   250  000004                     atraso@j:
   251                           	callstack 0
   252  000004                     kpReadKey@i:
   253                           	callstack 0
   254  000004                     delayMili@i:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0x3
   258  000004                     	ds	1
   259  000005                     ??_digitalWrite:
   260  000005                     ??_pinMode:
   261  000005                     atraso@k:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x4
   265  000005                     	ds	2
   266  000007                     soWrite@value:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x6
   270  000007                     	ds	2
   271  000009                     soWrite@i:
   272                           	callstack 0
   273                           
   274                           ; 1 bytes @ 0x8
   275  000009                     	ds	1
   276  00000A                     ??_kpDebounce:
   277  00000A                     pushNibble@rs:
   278                           	callstack 0
   279  00000A                     pushByte@rs:
   280                           	callstack 0
   281                           
   282                           ; 2 bytes @ 0x9
   283  00000A                     	ds	2
   284  00000C                     ??_pushByte:
   285  00000C                     pushNibble@value:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0xB
   289  00000C                     	ds	1
   290  00000D                     pushByte@value:
   291                           	callstack 0
   292  00000D                     kpDebounce@i:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0xC
   296  00000D                     	ds	1
   297  00000E                     lcdCommand@value:
   298                           	callstack 0
   299  00000E                     lcdChar@value:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0xD
   303  00000E                     	ds	1
   304  00000F                     printf@msg:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0xE
   308  00000F                     	ds	2
   309  000011                     ??_printf:
   310                           
   311                           ; 1 bytes @ 0x10
   312  000011                     	ds	2
   313  000013                     printf@i:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0x12
   317  000013                     	ds	2
   318  000015                     ??_main:
   319                           
   320                           ; 1 bytes @ 0x14
   321  000015                     	ds	4
   322  000019                     main@andar:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x18
   326  000019                     	ds	2
   327                           
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 26 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  andar           2   24[COMRAM] int 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   347 ;;      Params:         0       0       0       0       0       0       0
   348 ;;      Locals:         2       0       0       0       0       0       0
   349 ;;      Temps:          4       0       0       0       0       0       0
   350 ;;      Totals:         6       0       0       0       0       0       0
   351 ;;Total ram usage:        6 bytes
   352 ;; Hardware stack levels required when called: 6
   353 ;; This function calls:
   354 ;;		_atraso
   355 ;;		_digitalWrite
   356 ;;		_kpDebounce
   357 ;;		_kpInit
   358 ;;		_kpRead
   359 ;;		_kpReadKey
   360 ;;		_lcdInit
   361 ;;		_pinMode
   362 ;;		_printf
   363 ;;		_soInit
   364 ;;		_soWrite
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370                           	psect	text0
   371  000D82                     __ptext0:
   372                           	callstack 0
   373  000D82                     _main:
   374                           	callstack 25
   375  000D82                     
   376                           ;main.c: 27:     int andar = 1;
   377  000D82  0E00               	movlw	0
   378  000D84  6E1A               	movwf	(main@andar+1)^0,c
   379  000D86  0E01               	movlw	1
   380  000D88  6E19               	movwf	main@andar^0,c
   381                           
   382                           ;main.c: 28:     TRISD = 0x00;
   383  000D8A  0E00               	movlw	0
   384  000D8C  6E95               	movwf	149,c	;volatile
   385  000D8E                     
   386                           ;main.c: 29:     PORTD = 0xFF;
   387  000D8E  6883               	setf	131,c	;volatile
   388  000D90                     
   389                           ;main.c: 31:     lcdInit();
   390  000D90  EC57  F007         	call	_lcdInit	;wreg free
   391  000D94                     
   392                           ;main.c: 32:     printf("Escolha o andar desejado\npelo teclado");
   393  000D94  0E1F               	movlw	low STR_1
   394  000D96  6E0F               	movwf	printf@msg^0,c
   395  000D98  0E06               	movlw	high STR_1
   396  000D9A  6E10               	movwf	(printf@msg+1)^0,c
   397  000D9C  ECB1  F007         	call	_printf	;wreg free
   398  000DA0                     
   399                           ;main.c: 35:     pinMode(PIN_D0, 0);
   400  000DA0  0E00               	movlw	0
   401  000DA2  6E02               	movwf	(pinMode@pin+1)^0,c
   402  000DA4  0E18               	movlw	24
   403  000DA6  6E01               	movwf	pinMode@pin^0,c
   404  000DA8  0E00               	movlw	0
   405  000DAA  6E04               	movwf	(pinMode@type+1)^0,c
   406  000DAC  0E00               	movlw	0
   407  000DAE  6E03               	movwf	pinMode@type^0,c
   408  000DB0  EC23  F003         	call	_pinMode	;wreg free
   409  000DB4                     
   410                           ;main.c: 36:     soInit();
   411  000DB4  ECE9  F008         	call	_soInit	;wreg free
   412  000DB8                     
   413                           ;main.c: 37:     kpInit();
   414  000DB8  EC08  F009         	call	_kpInit	;wreg free
   415  000DBC                     l1545:
   416                           
   417                           ;main.c: 40:         soWrite(0x00);
   418  000DBC  0E00               	movlw	0
   419  000DBE  6E08               	movwf	(soWrite@value+1)^0,c
   420  000DC0  0E00               	movlw	0
   421  000DC2  6E07               	movwf	soWrite@value^0,c
   422  000DC4  ECA1  F008         	call	_soWrite	;wreg free
   423  000DC8                     
   424                           ;main.c: 41:         digitalWrite(PIN_D0, 1);
   425  000DC8  0E00               	movlw	0
   426  000DCA  6E02               	movwf	(digitalWrite@pin+1)^0,c
   427  000DCC  0E18               	movlw	24
   428  000DCE  6E01               	movwf	digitalWrite@pin^0,c
   429  000DD0  0E00               	movlw	0
   430  000DD2  6E04               	movwf	(digitalWrite@value+1)^0,c
   431  000DD4  0E01               	movlw	1
   432  000DD6  6E03               	movwf	digitalWrite@value^0,c
   433  000DD8  EC4A  F004         	call	_digitalWrite	;wreg free
   434  000DDC                     
   435                           ;main.c: 42:         soWrite(valor[andar]);
   436  000DDC  0E01               	movlw	low _valor
   437  000DDE  2419               	addwf	main@andar^0,w,c
   438  000DE0  6EF6               	movwf	tblptrl,c
   439  000DE2  0E06               	movlw	high _valor
   440  000DE4  201A               	addwfc	(main@andar+1)^0,w,c
   441  000DE6  6EF7               	movwf	tblptrh,c
   442  000DE8                     	if	0	;There are less than 3 active tblptr bytes
   443  000DE8                     	endif
   444  000DE8  0008               	tblrd		*
   445  000DEA  50F5               	movf	tablat,w,c
   446  000DEC  6E07               	movwf	soWrite@value^0,c
   447  000DEE  6A08               	clrf	(soWrite@value+1)^0,c
   448  000DF0  ECA1  F008         	call	_soWrite	;wreg free
   449  000DF4                     
   450                           ;main.c: 43:         PORTD = leds[andar-1];
   451  000DF4  0EFF               	movlw	255
   452  000DF6  6E15               	movwf	??_main^0,c
   453  000DF8  0EFF               	movlw	255
   454  000DFA  6E16               	movwf	(??_main+1)^0,c
   455  000DFC  C019  F017         	movff	main@andar,??_main+2
   456  000E00  C01A  F018         	movff	main@andar+1,??_main+3
   457  000E04  5015               	movf	??_main^0,w,c
   458  000E06  2617               	addwf	(??_main+2)^0,f,c
   459  000E08  5016               	movf	(??_main+1)^0,w,c
   460  000E0A  2218               	addwfc	(??_main+3)^0,f,c
   461  000E0C  0E1B               	movlw	low _leds
   462  000E0E  2417               	addwf	(??_main+2)^0,w,c
   463  000E10  6EF6               	movwf	tblptrl,c
   464  000E12  0E06               	movlw	high _leds
   465  000E14  2018               	addwfc	(??_main+3)^0,w,c
   466  000E16  6EF7               	movwf	tblptrh,c
   467  000E18                     	if	0	;There are less than 3 active tblptr bytes
   468  000E18                     	endif
   469  000E18  0008               	tblrd		*
   470  000E1A  CFF5 FF83          	movff	tablat,3971	;volatile
   471  000E1E                     
   472                           ;main.c: 44:         atraso(5);
   473  000E1E  0E05               	movlw	5
   474  000E20  EC3F  F008         	call	_atraso
   475  000E24                     
   476                           ;main.c: 46:         kpDebounce();
   477  000E24  EC26  F006         	call	_kpDebounce	;wreg free
   478  000E28                     
   479                           ;main.c: 47:         if (kpReadKey() != 0) {
   480  000E28  EC03  F008         	call	_kpReadKey	;wreg free
   481  000E2C  0900               	iorlw	0
   482  000E2E  B4D8               	btfsc	status,2,c
   483  000E30  EF1C  F007         	goto	u1461
   484  000E34  EF1E  F007         	goto	u1460
   485  000E38                     u1461:
   486  000E38  EF32  F007         	goto	l1565
   487  000E3C                     u1460:
   488  000E3C                     
   489                           ;main.c: 48:                 andar = kpRead();
   490  000E3C  ECA1  F009         	call	_kpRead	;wreg free
   491  000E40  C001  F019         	movff	?_kpRead,main@andar
   492  000E44  C002  F01A         	movff	?_kpRead+1,main@andar+1
   493  000E48                     
   494                           ;main.c: 49:                 if(andar == 4){
   495  000E48  0E04               	movlw	4
   496  000E4A  1819               	xorwf	main@andar^0,w,c
   497  000E4C  101A               	iorwf	(main@andar+1)^0,w,c
   498  000E4E  A4D8               	btfss	status,2,c
   499  000E50  EF2C  F007         	goto	u1471
   500  000E54  EF2E  F007         	goto	u1470
   501  000E58                     u1471:
   502  000E58  EF32  F007         	goto	l1565
   503  000E5C                     u1470:
   504  000E5C                     
   505                           ;main.c: 50:                     andar = 3;
   506  000E5C  0E00               	movlw	0
   507  000E5E  6E1A               	movwf	(main@andar+1)^0,c
   508  000E60  0E03               	movlw	3
   509  000E62  6E19               	movwf	main@andar^0,c
   510  000E64                     l1565:
   511                           
   512                           ;main.c: 53:         if ((andar != 1) && (andar != 2) && (andar != 3)){
   513  000E64  0419               	decf	main@andar^0,w,c
   514  000E66  101A               	iorwf	(main@andar+1)^0,w,c
   515  000E68  B4D8               	btfsc	status,2,c
   516  000E6A  EF39  F007         	goto	u1481
   517  000E6E  EF3B  F007         	goto	u1480
   518  000E72                     u1481:
   519  000E72  EFDE  F006         	goto	l1545
   520  000E76                     u1480:
   521  000E76  0E02               	movlw	2
   522  000E78  1819               	xorwf	main@andar^0,w,c
   523  000E7A  101A               	iorwf	(main@andar+1)^0,w,c
   524  000E7C  B4D8               	btfsc	status,2,c
   525  000E7E  EF43  F007         	goto	u1491
   526  000E82  EF45  F007         	goto	u1490
   527  000E86                     u1491:
   528  000E86  EFDE  F006         	goto	l1545
   529  000E8A                     u1490:
   530  000E8A  0E03               	movlw	3
   531  000E8C  1819               	xorwf	main@andar^0,w,c
   532  000E8E  101A               	iorwf	(main@andar+1)^0,w,c
   533  000E90  B4D8               	btfsc	status,2,c
   534  000E92  EF4D  F007         	goto	u1501
   535  000E96  EF4F  F007         	goto	u1500
   536  000E9A                     u1501:
   537  000E9A  EFDE  F006         	goto	l1545
   538  000E9E                     u1500:
   539  000E9E                     
   540                           ;main.c: 54:             andar = 4;
   541  000E9E  0E00               	movlw	0
   542  000EA0  6E1A               	movwf	(main@andar+1)^0,c
   543  000EA2  0E04               	movlw	4
   544  000EA4  6E19               	movwf	main@andar^0,c
   545  000EA6  EFDE  F006         	goto	l1545
   546  000EAA  EF00  F000         	goto	start
   547  000EAE                     __end_of_main:
   548                           	callstack 0
   549                           
   550 ;; *************** function _printf *****************
   551 ;; Defined at:
   552 ;;		line 2 in file "stdio.c"
   553 ;; Parameters:    Size  Location     Type
   554 ;;  msg             2   14[COMRAM] PTR unsigned char 
   555 ;;		 -> STR_1(38), 
   556 ;; Auto vars:     Size  Location     Type
   557 ;;  i               2   18[COMRAM] int 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   567 ;;      Params:         2       0       0       0       0       0       0
   568 ;;      Locals:         2       0       0       0       0       0       0
   569 ;;      Temps:          2       0       0       0       0       0       0
   570 ;;      Totals:         6       0       0       0       0       0       0
   571 ;;Total ram usage:        6 bytes
   572 ;; Hardware stack levels used: 1
   573 ;; Hardware stack levels required when called: 5
   574 ;; This function calls:
   575 ;;		_lcdChar
   576 ;;		_lcdCommand
   577 ;; This function is called by:
   578 ;;		_main
   579 ;; This function uses a non-reentrant model
   580 ;;
   581                           
   582                           	psect	text1
   583  000F62                     __ptext1:
   584                           	callstack 0
   585  000F62                     _printf:
   586                           	callstack 25
   587  000F62                     
   588                           ;stdio.c: 3:     int i;;stdio.c: 4:     for(i=0; i<40; i++){
   589  000F62  0E00               	movlw	0
   590  000F64  6E14               	movwf	(printf@i+1)^0,c
   591  000F66  0E00               	movlw	0
   592  000F68  6E13               	movwf	printf@i^0,c
   593  000F6A                     l1493:
   594                           
   595                           ;stdio.c: 5:         if(msg[i] == '\0'){
   596  000F6A  5013               	movf	printf@i^0,w,c
   597  000F6C  240F               	addwf	printf@msg^0,w,c
   598  000F6E  6E11               	movwf	??_printf^0,c
   599  000F70  5014               	movf	(printf@i+1)^0,w,c
   600  000F72  2010               	addwfc	(printf@msg+1)^0,w,c
   601  000F74  6E12               	movwf	(??_printf+1)^0,c
   602  000F76  C011  FFF6         	movff	??_printf,tblptrl
   603  000F7A  C012  FFF7         	movff	??_printf+1,tblptrh
   604  000F7E                     	if	0	;tblptru may be non-zero
   605  000F7E                     	endif
   606  000F7E                     	if	0	;tblptru may be non-zero
   607  000F7E                     	endif
   608  000F7E  0008               	tblrd		*
   609  000F80  50F5               	movf	tablat,w,c
   610  000F82  0900               	iorlw	0
   611  000F84  A4D8               	btfss	status,2,c
   612  000F86  EFC7  F007         	goto	u1391
   613  000F8A  EFC9  F007         	goto	u1390
   614  000F8E                     u1391:
   615  000F8E  EFCB  F007         	goto	l1499
   616  000F92                     u1390:
   617  000F92  EF02  F008         	goto	l208
   618  000F96                     l1499:
   619  000F96  5013               	movf	printf@i^0,w,c
   620  000F98  240F               	addwf	printf@msg^0,w,c
   621  000F9A  6E11               	movwf	??_printf^0,c
   622  000F9C  5014               	movf	(printf@i+1)^0,w,c
   623  000F9E  2010               	addwfc	(printf@msg+1)^0,w,c
   624  000FA0  6E12               	movwf	(??_printf+1)^0,c
   625  000FA2  C011  FFF6         	movff	??_printf,tblptrl
   626  000FA6  C012  FFF7         	movff	??_printf+1,tblptrh
   627  000FAA                     	if	0	;tblptru may be non-zero
   628  000FAA                     	endif
   629  000FAA                     	if	0	;tblptru may be non-zero
   630  000FAA                     	endif
   631  000FAA  0008               	tblrd		*
   632  000FAC  50F5               	movf	tablat,w,c
   633  000FAE  0A0A               	xorlw	10
   634  000FB0  A4D8               	btfss	status,2,c
   635  000FB2  EFDD  F007         	goto	u1401
   636  000FB6  EFDF  F007         	goto	u1400
   637  000FBA                     u1401:
   638  000FBA  EFE4  F007         	goto	l1503
   639  000FBE                     u1400:
   640  000FBE                     
   641                           ;stdio.c: 9:             lcdCommand(0xC0);
   642  000FBE  0EC0               	movlw	192
   643  000FC0  EC85  F009         	call	_lcdCommand
   644                           
   645                           ;stdio.c: 10:         }
   646  000FC4  EFF2  F007         	goto	l1505
   647  000FC8                     l1503:
   648                           
   649                           ;stdio.c: 12:             lcdChar(msg[i]);
   650  000FC8  5013               	movf	printf@i^0,w,c
   651  000FCA  240F               	addwf	printf@msg^0,w,c
   652  000FCC  6E11               	movwf	??_printf^0,c
   653  000FCE  5014               	movf	(printf@i+1)^0,w,c
   654  000FD0  2010               	addwfc	(printf@msg+1)^0,w,c
   655  000FD2  6E12               	movwf	(??_printf+1)^0,c
   656  000FD4  C011  FFF6         	movff	??_printf,tblptrl
   657  000FD8  C012  FFF7         	movff	??_printf+1,tblptrh
   658  000FDC                     	if	0	;tblptru may be non-zero
   659  000FDC                     	endif
   660  000FDC                     	if	0	;tblptru may be non-zero
   661  000FDC                     	endif
   662  000FDC  0008               	tblrd		*
   663  000FDE  50F5               	movf	tablat,w,c
   664  000FE0  EC76  F009         	call	_lcdChar
   665  000FE4                     l1505:
   666                           
   667                           ;stdio.c: 14:     }
   668  000FE4  4A13               	infsnz	printf@i^0,f,c
   669  000FE6  2A14               	incf	(printf@i+1)^0,f,c
   670  000FE8  BE14               	btfsc	(printf@i+1)^0,7,c
   671  000FEA  EF00  F008         	goto	u1411
   672  000FEE  5014               	movf	(printf@i+1)^0,w,c
   673  000FF0  E109               	bnz	u1410
   674  000FF2  0E28               	movlw	40
   675  000FF4  5C13               	subwf	printf@i^0,w,c
   676  000FF6  A0D8               	btfss	status,0,c
   677  000FF8  EF00  F008         	goto	u1411
   678  000FFC  EF02  F008         	goto	u1410
   679  001000                     u1411:
   680  001000  EFB5  F007         	goto	l1493
   681  001004                     u1410:
   682  001004                     l208:
   683  001004  0012               	return		;funcret
   684  001006                     __end_of_printf:
   685                           	callstack 0
   686                           
   687 ;; *************** function _lcdChar *****************
   688 ;; Defined at:
   689 ;;		line 52 in file "lcd.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  value           1    wreg     unsigned char 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  value           1   13[COMRAM] unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   703 ;;      Params:         0       0       0       0       0       0       0
   704 ;;      Locals:         1       0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0
   706 ;;      Totals:         1       0       0       0       0       0       0
   707 ;;Total ram usage:        1 bytes
   708 ;; Hardware stack levels used: 1
   709 ;; Hardware stack levels required when called: 4
   710 ;; This function calls:
   711 ;;		_delayMicro
   712 ;;		_pushByte
   713 ;; This function is called by:
   714 ;;		_printf
   715 ;;		_lcdString
   716 ;;		_lcdNumber
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           
   720                           	psect	text2
   721  0012EC                     __ptext2:
   722                           	callstack 0
   723  0012EC                     _lcdChar:
   724                           	callstack 25
   725                           
   726                           ;incstack = 0
   727                           ;lcdChar@value stored from wreg
   728  0012EC  6E0E               	movwf	lcdChar@value^0,c
   729  0012EE                     
   730                           ;lcd.c: 53:  pushByte(value, 1);
   731  0012EE  0E00               	movlw	0
   732  0012F0  6E0B               	movwf	(pushByte@rs+1)^0,c
   733  0012F2  0E01               	movlw	1
   734  0012F4  6E0A               	movwf	pushByte@rs^0,c
   735  0012F6  500E               	movf	lcdChar@value^0,w,c
   736  0012F8  EC74  F008         	call	_pushByte
   737  0012FC                     
   738                           ;lcd.c: 54:  delayMicro(80);
   739  0012FC  0E00               	movlw	0
   740  0012FE  6E02               	movwf	(delayMicro@a+1)^0,c
   741  001300  0E50               	movlw	80
   742  001302  6E01               	movwf	delayMicro@a^0,c
   743  001304  ECA6  F009         	call	_delayMicro	;wreg free
   744  001308  0012               	return		;funcret
   745  00130A                     __end_of_lcdChar:
   746                           	callstack 0
   747                           
   748 ;; *************** function _lcdInit *****************
   749 ;; Defined at:
   750 ;;		line 72 in file "lcd.c"
   751 ;; Parameters:    Size  Location     Type
   752 ;;		None
   753 ;; Auto vars:     Size  Location     Type
   754 ;;		None
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, status,2, status,0, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : 0/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   764 ;;      Params:         0       0       0       0       0       0       0
   765 ;;      Locals:         0       0       0       0       0       0       0
   766 ;;      Temps:          0       0       0       0       0       0       0
   767 ;;      Totals:         0       0       0       0       0       0       0
   768 ;;Total ram usage:        0 bytes
   769 ;; Hardware stack levels used: 1
   770 ;; Hardware stack levels required when called: 5
   771 ;; This function calls:
   772 ;;		_delayMicro
   773 ;;		_delayMili
   774 ;;		_lcdCommand
   775 ;;		_pinMode
   776 ;;		_pushNibble
   777 ;;		_soInit
   778 ;; This function is called by:
   779 ;;		_main
   780 ;; This function uses a non-reentrant model
   781 ;;
   782                           
   783                           	psect	text3
   784  000EAE                     __ptext3:
   785                           	callstack 0
   786  000EAE                     _lcdInit:
   787                           	callstack 25
   788  000EAE                     
   789                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
   790  000EAE  0E00               	movlw	0
   791  000EB0  6E02               	movwf	(pinMode@pin+1)^0,c
   792  000EB2  0E1C               	movlw	28
   793  000EB4  6E01               	movwf	pinMode@pin^0,c
   794  000EB6  0E00               	movlw	0
   795  000EB8  6E04               	movwf	(pinMode@type+1)^0,c
   796  000EBA  0E00               	movlw	0
   797  000EBC  6E03               	movwf	pinMode@type^0,c
   798  000EBE  EC23  F003         	call	_pinMode	;wreg free
   799                           
   800                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
   801  000EC2  0E00               	movlw	0
   802  000EC4  6E02               	movwf	(pinMode@pin+1)^0,c
   803  000EC6  0E1D               	movlw	29
   804  000EC8  6E01               	movwf	pinMode@pin^0,c
   805  000ECA  0E00               	movlw	0
   806  000ECC  6E04               	movwf	(pinMode@type+1)^0,c
   807  000ECE  0E00               	movlw	0
   808  000ED0  6E03               	movwf	pinMode@type^0,c
   809  000ED2  EC23  F003         	call	_pinMode	;wreg free
   810                           
   811                           ;lcd.c: 75:  soInit();
   812  000ED6  ECE9  F008         	call	_soInit	;wreg free
   813                           
   814                           ;lcd.c: 76:  delayMili(15);
   815  000EDA  0E00               	movlw	0
   816  000EDC  6E02               	movwf	(delayMili@a+1)^0,c
   817  000EDE  0E0F               	movlw	15
   818  000EE0  6E01               	movwf	delayMili@a^0,c
   819  000EE2  EC21  F009         	call	_delayMili	;wreg free
   820                           
   821                           ;lcd.c: 78:  pushNibble(0x03, 0);
   822  000EE6  0E00               	movlw	0
   823  000EE8  6E0B               	movwf	(pushNibble@rs+1)^0,c
   824  000EEA  0E00               	movlw	0
   825  000EEC  6E0A               	movwf	pushNibble@rs^0,c
   826  000EEE  0E03               	movlw	3
   827  000EF0  EC63  F009         	call	_pushNibble
   828                           
   829                           ;lcd.c: 79:  delayMili(5);
   830  000EF4  0E00               	movlw	0
   831  000EF6  6E02               	movwf	(delayMili@a+1)^0,c
   832  000EF8  0E05               	movlw	5
   833  000EFA  6E01               	movwf	delayMili@a^0,c
   834  000EFC  EC21  F009         	call	_delayMili	;wreg free
   835                           
   836                           ;lcd.c: 80:  pushNibble(0x03, 0);
   837  000F00  0E00               	movlw	0
   838  000F02  6E0B               	movwf	(pushNibble@rs+1)^0,c
   839  000F04  0E00               	movlw	0
   840  000F06  6E0A               	movwf	pushNibble@rs^0,c
   841  000F08  0E03               	movlw	3
   842  000F0A  EC63  F009         	call	_pushNibble
   843  000F0E                     
   844                           ;lcd.c: 81:  delayMicro(160);
   845  000F0E  0E00               	movlw	0
   846  000F10  6E02               	movwf	(delayMicro@a+1)^0,c
   847  000F12  0EA0               	movlw	160
   848  000F14  6E01               	movwf	delayMicro@a^0,c
   849  000F16  ECA6  F009         	call	_delayMicro	;wreg free
   850  000F1A                     
   851                           ;lcd.c: 82:  pushNibble(0x03, 0);
   852  000F1A  0E00               	movlw	0
   853  000F1C  6E0B               	movwf	(pushNibble@rs+1)^0,c
   854  000F1E  0E00               	movlw	0
   855  000F20  6E0A               	movwf	pushNibble@rs^0,c
   856  000F22  0E03               	movlw	3
   857  000F24  EC63  F009         	call	_pushNibble
   858                           
   859                           ;lcd.c: 83:  delayMicro(160);
   860  000F28  0E00               	movlw	0
   861  000F2A  6E02               	movwf	(delayMicro@a+1)^0,c
   862  000F2C  0EA0               	movlw	160
   863  000F2E  6E01               	movwf	delayMicro@a^0,c
   864  000F30  ECA6  F009         	call	_delayMicro	;wreg free
   865  000F34                     
   866                           ;lcd.c: 85:  pushNibble(0x02, 0);
   867  000F34  0E00               	movlw	0
   868  000F36  6E0B               	movwf	(pushNibble@rs+1)^0,c
   869  000F38  0E00               	movlw	0
   870  000F3A  6E0A               	movwf	pushNibble@rs^0,c
   871  000F3C  0E02               	movlw	2
   872  000F3E  EC63  F009         	call	_pushNibble
   873  000F42                     
   874                           ;lcd.c: 86:  delayMili(10);
   875  000F42  0E00               	movlw	0
   876  000F44  6E02               	movwf	(delayMili@a+1)^0,c
   877  000F46  0E0A               	movlw	10
   878  000F48  6E01               	movwf	delayMili@a^0,c
   879  000F4A  EC21  F009         	call	_delayMili	;wreg free
   880  000F4E                     
   881                           ;lcd.c: 88:  lcdCommand(0x28);
   882  000F4E  0E28               	movlw	40
   883  000F50  EC85  F009         	call	_lcdCommand
   884  000F54                     
   885                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
   886  000F54  0E0C               	movlw	12
   887  000F56  EC85  F009         	call	_lcdCommand
   888  000F5A                     
   889                           ;lcd.c: 90:  lcdCommand(0x01);
   890  000F5A  0E01               	movlw	1
   891  000F5C  EC85  F009         	call	_lcdCommand
   892  000F60  0012               	return		;funcret
   893  000F62                     __end_of_lcdInit:
   894                           	callstack 0
   895                           
   896 ;; *************** function _pushNibble *****************
   897 ;; Defined at:
   898 ;;		line 25 in file "lcd.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  value           1    wreg     unsigned char 
   901 ;;  rs              2    9[COMRAM] int 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;  value           1   11[COMRAM] unsigned char 
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, status,2, status,0, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   913 ;;      Params:         2       0       0       0       0       0       0
   914 ;;      Locals:         1       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0
   916 ;;      Totals:         3       0       0       0       0       0       0
   917 ;;Total ram usage:        3 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 3
   920 ;; This function calls:
   921 ;;		_digitalWrite
   922 ;;		_pulseEnablePin
   923 ;;		_soWrite
   924 ;; This function is called by:
   925 ;;		_lcdInit
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text4
   930  0012C6                     __ptext4:
   931                           	callstack 0
   932  0012C6                     _pushNibble:
   933                           	callstack 26
   934                           
   935                           ;incstack = 0
   936                           ;pushNibble@value stored from wreg
   937  0012C6  6E0C               	movwf	pushNibble@value^0,c
   938  0012C8                     
   939                           ;lcd.c: 26:  soWrite(value);
   940  0012C8  C00C  F007         	movff	pushNibble@value,soWrite@value
   941  0012CC  6A08               	clrf	(soWrite@value+1)^0,c
   942  0012CE  ECA1  F008         	call	_soWrite	;wreg free
   943                           
   944                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
   945  0012D2  0E00               	movlw	0
   946  0012D4  6E02               	movwf	(digitalWrite@pin+1)^0,c
   947  0012D6  0E1D               	movlw	29
   948  0012D8  6E01               	movwf	digitalWrite@pin^0,c
   949  0012DA  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
   950  0012DE  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
   951  0012E2  EC4A  F004         	call	_digitalWrite	;wreg free
   952                           
   953                           ;lcd.c: 28:  pulseEnablePin();
   954  0012E6  ECC8  F008         	call	_pulseEnablePin	;wreg free
   955  0012EA  0012               	return		;funcret
   956  0012EC                     __end_of_pushNibble:
   957                           	callstack 0
   958                           
   959 ;; *************** function _lcdCommand *****************
   960 ;; Defined at:
   961 ;;		line 40 in file "lcd.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  value           1    wreg     unsigned char 
   964 ;; Auto vars:     Size  Location     Type
   965 ;;  value           1   13[COMRAM] unsigned char 
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/0
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   975 ;;      Params:         0       0       0       0       0       0       0
   976 ;;      Locals:         1       0       0       0       0       0       0
   977 ;;      Temps:          0       0       0       0       0       0       0
   978 ;;      Totals:         1       0       0       0       0       0       0
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 4
   982 ;; This function calls:
   983 ;;		_delayMili
   984 ;;		_pushByte
   985 ;; This function is called by:
   986 ;;		_lcdInit
   987 ;;		_printf
   988 ;;		_lcdPosition
   989 ;; This function uses a non-reentrant model
   990 ;;
   991                           
   992                           	psect	text5
   993  00130A                     __ptext5:
   994                           	callstack 0
   995  00130A                     _lcdCommand:
   996                           	callstack 25
   997                           
   998                           ;incstack = 0
   999                           ;lcdCommand@value stored from wreg
  1000  00130A  6E0E               	movwf	lcdCommand@value^0,c
  1001  00130C                     
  1002                           ;lcd.c: 41:  pushByte(value, 0);
  1003  00130C  0E00               	movlw	0
  1004  00130E  6E0B               	movwf	(pushByte@rs+1)^0,c
  1005  001310  0E00               	movlw	0
  1006  001312  6E0A               	movwf	pushByte@rs^0,c
  1007  001314  500E               	movf	lcdCommand@value^0,w,c
  1008  001316  EC74  F008         	call	_pushByte
  1009                           
  1010                           ;lcd.c: 42:  delayMili(2);
  1011  00131A  0E00               	movlw	0
  1012  00131C  6E02               	movwf	(delayMili@a+1)^0,c
  1013  00131E  0E02               	movlw	2
  1014  001320  6E01               	movwf	delayMili@a^0,c
  1015  001322  EC21  F009         	call	_delayMili	;wreg free
  1016  001326  0012               	return		;funcret
  1017  001328                     __end_of_lcdCommand:
  1018                           	callstack 0
  1019                           
  1020 ;; *************** function _pushByte *****************
  1021 ;; Defined at:
  1022 ;;		line 31 in file "lcd.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  value           1    wreg     unsigned char 
  1025 ;;  rs              2    9[COMRAM] int 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  value           1   12[COMRAM] unsigned char 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, status,2, status,0, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1037 ;;      Params:         2       0       0       0       0       0       0
  1038 ;;      Locals:         1       0       0       0       0       0       0
  1039 ;;      Temps:          1       0       0       0       0       0       0
  1040 ;;      Totals:         4       0       0       0       0       0       0
  1041 ;;Total ram usage:        4 bytes
  1042 ;; Hardware stack levels used: 1
  1043 ;; Hardware stack levels required when called: 3
  1044 ;; This function calls:
  1045 ;;		_digitalWrite
  1046 ;;		_pulseEnablePin
  1047 ;;		_soWrite
  1048 ;; This function is called by:
  1049 ;;		_lcdCommand
  1050 ;;		_lcdChar
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text6
  1055  0010E8                     __ptext6:
  1056                           	callstack 0
  1057  0010E8                     _pushByte:
  1058                           	callstack 25
  1059                           
  1060                           ;incstack = 0
  1061                           ;pushByte@value stored from wreg
  1062  0010E8  6E0D               	movwf	pushByte@value^0,c
  1063  0010EA                     
  1064                           ;lcd.c: 32:  soWrite(value >> 4);
  1065  0010EA  C00D  F00C         	movff	pushByte@value,??_pushByte
  1066  0010EE  3A0C               	swapf	??_pushByte^0,f,c
  1067  0010F0  0E0F               	movlw	15
  1068  0010F2  160C               	andwf	??_pushByte^0,f,c
  1069  0010F4  500C               	movf	??_pushByte^0,w,c
  1070  0010F6  6E07               	movwf	soWrite@value^0,c
  1071  0010F8  6A08               	clrf	(soWrite@value+1)^0,c
  1072  0010FA  ECA1  F008         	call	_soWrite	;wreg free
  1073                           
  1074                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  1075  0010FE  0E00               	movlw	0
  1076  001100  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1077  001102  0E1D               	movlw	29
  1078  001104  6E01               	movwf	digitalWrite@pin^0,c
  1079  001106  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  1080  00110A  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  1081  00110E  EC4A  F004         	call	_digitalWrite	;wreg free
  1082                           
  1083                           ;lcd.c: 34:  pulseEnablePin();
  1084  001112  ECC8  F008         	call	_pulseEnablePin	;wreg free
  1085                           
  1086                           ;lcd.c: 36:  soWrite(value & 0x0F);
  1087  001116  C00D  F00C         	movff	pushByte@value,??_pushByte
  1088  00111A  0E0F               	movlw	15
  1089  00111C  160C               	andwf	??_pushByte^0,f,c
  1090  00111E  500C               	movf	??_pushByte^0,w,c
  1091  001120  6E07               	movwf	soWrite@value^0,c
  1092  001122  6A08               	clrf	(soWrite@value+1)^0,c
  1093  001124  ECA1  F008         	call	_soWrite	;wreg free
  1094                           
  1095                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  1096  001128  0E00               	movlw	0
  1097  00112A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1098  00112C  0E1D               	movlw	29
  1099  00112E  6E01               	movwf	digitalWrite@pin^0,c
  1100  001130  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  1101  001134  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  1102  001138  EC4A  F004         	call	_digitalWrite	;wreg free
  1103                           
  1104                           ;lcd.c: 38:  pulseEnablePin();
  1105  00113C  ECC8  F008         	call	_pulseEnablePin	;wreg free
  1106  001140  0012               	return		;funcret
  1107  001142                     __end_of_pushByte:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _pulseEnablePin *****************
  1111 ;; Defined at:
  1112 ;;		line 18 in file "lcd.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, cstack
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1126 ;;      Params:         0       0       0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; Hardware stack levels required when called: 1
  1133 ;; This function calls:
  1134 ;;		_delayMicro
  1135 ;;		_digitalWrite
  1136 ;; This function is called by:
  1137 ;;		_pushNibble
  1138 ;;		_pushByte
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text7
  1143  001190                     __ptext7:
  1144                           	callstack 0
  1145  001190                     _pulseEnablePin:
  1146                           	callstack 26
  1147  001190                     
  1148                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  1149  001190  0E00               	movlw	0
  1150  001192  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1151  001194  0E1C               	movlw	28
  1152  001196  6E01               	movwf	digitalWrite@pin^0,c
  1153  001198  0E00               	movlw	0
  1154  00119A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1155  00119C  0E01               	movlw	1
  1156  00119E  6E03               	movwf	digitalWrite@value^0,c
  1157  0011A0  EC4A  F004         	call	_digitalWrite	;wreg free
  1158  0011A4                     
  1159                           ;lcd.c: 20:  delayMicro(5);
  1160  0011A4  0E00               	movlw	0
  1161  0011A6  6E02               	movwf	(delayMicro@a+1)^0,c
  1162  0011A8  0E05               	movlw	5
  1163  0011AA  6E01               	movwf	delayMicro@a^0,c
  1164  0011AC  ECA6  F009         	call	_delayMicro	;wreg free
  1165  0011B0                     
  1166                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  1167  0011B0  0E00               	movlw	0
  1168  0011B2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1169  0011B4  0E1C               	movlw	28
  1170  0011B6  6E01               	movwf	digitalWrite@pin^0,c
  1171  0011B8  0E00               	movlw	0
  1172  0011BA  6E04               	movwf	(digitalWrite@value+1)^0,c
  1173  0011BC  0E00               	movlw	0
  1174  0011BE  6E03               	movwf	digitalWrite@value^0,c
  1175  0011C0  EC4A  F004         	call	_digitalWrite	;wreg free
  1176                           
  1177                           ;lcd.c: 22:  delayMicro(5);
  1178  0011C4  0E00               	movlw	0
  1179  0011C6  6E02               	movwf	(delayMicro@a+1)^0,c
  1180  0011C8  0E05               	movlw	5
  1181  0011CA  6E01               	movwf	delayMicro@a^0,c
  1182  0011CC  ECA6  F009         	call	_delayMicro	;wreg free
  1183  0011D0  0012               	return		;funcret
  1184  0011D2                     __end_of_pulseEnablePin:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _delayMicro *****************
  1188 ;; Defined at:
  1189 ;;		line 5 in file "lcd.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  a               2    0[COMRAM] int 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;  i               2    0        volatile int 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		None
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1203 ;;      Params:         2       0       0       0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0
  1206 ;;      Totals:         2       0       0       0       0       0       0
  1207 ;;Total ram usage:        2 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; This function calls:
  1210 ;;		Nothing
  1211 ;; This function is called by:
  1212 ;;		_pulseEnablePin
  1213 ;;		_lcdChar
  1214 ;;		_lcdInit
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text8
  1219  00134C                     __ptext8:
  1220                           	callstack 0
  1221  00134C                     _delayMicro:
  1222                           	callstack 26
  1223  00134C  0012               	return		;funcret
  1224  00134E                     __end_of_delayMicro:
  1225                           	callstack 0
  1226                           
  1227 ;; *************** function _delayMili *****************
  1228 ;; Defined at:
  1229 ;;		line 10 in file "lcd.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;  a               2    0[COMRAM] int 
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;  i               2    3[COMRAM] volatile int 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1243 ;;      Params:         2       0       0       0       0       0       0
  1244 ;;      Locals:         2       0       0       0       0       0       0
  1245 ;;      Temps:          1       0       0       0       0       0       0
  1246 ;;      Totals:         5       0       0       0       0       0       0
  1247 ;;Total ram usage:        5 bytes
  1248 ;; Hardware stack levels used: 1
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_lcdCommand
  1253 ;;		_lcdInit
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text9
  1258  001242                     __ptext9:
  1259                           	callstack 0
  1260  001242                     _delayMili:
  1261                           	callstack 28
  1262  001242                     
  1263                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  1264  001242  0E00               	movlw	0
  1265  001244  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  1266  001246  0E00               	movlw	0
  1267  001248  6E04               	movwf	delayMili@i^0,c	;volatile
  1268  00124A  EF29  F009         	goto	l1385
  1269  00124E                     l1383:
  1270                           
  1271                           ;lcd.c: 15:  }
  1272  00124E  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  1273  001250  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  1274  001252                     l1385:
  1275  001252  5001               	movf	delayMili@a^0,w,c
  1276  001254  5C04               	subwf	delayMili@i^0,w,c	;volatile
  1277  001256  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  1278  001258  0A80               	xorlw	128
  1279  00125A  6E03               	movwf	??_delayMili^0,c
  1280  00125C  5002               	movf	(delayMili@a+1)^0,w,c
  1281  00125E  0A80               	xorlw	128
  1282  001260  5803               	subwfb	??_delayMili^0,w,c
  1283  001262  A0D8               	btfss	status,0,c
  1284  001264  EF36  F009         	goto	u1201
  1285  001268  EF38  F009         	goto	u1200
  1286  00126C                     u1201:
  1287  00126C  EF27  F009         	goto	l1383
  1288  001270                     u1200:
  1289  001270  0012               	return		;funcret
  1290  001272                     __end_of_delayMili:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _kpReadKey *****************
  1294 ;; Defined at:
  1295 ;;		line 17 in file "keypad.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;  i               2    3[COMRAM] int 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      unsigned char 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1309 ;;      Params:         0       0       0       0       0       0       0
  1310 ;;      Locals:         2       0       0       0       0       0       0
  1311 ;;      Temps:          3       0       0       0       0       0       0
  1312 ;;      Totals:         5       0       0       0       0       0       0
  1313 ;;Total ram usage:        5 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           	psect	text10
  1323  001006                     __ptext10:
  1324                           	callstack 0
  1325  001006                     _kpReadKey:
  1326                           	callstack 30
  1327  001006                     
  1328                           ;keypad.c: 18:  int i;;keypad.c: 19:  for(i=0;i<10;i++){
  1329  001006  0E00               	movlw	0
  1330  001008  6E05               	movwf	(kpReadKey@i+1)^0,c
  1331  00100A  0E00               	movlw	0
  1332  00100C  6E04               	movwf	kpReadKey@i^0,c
  1333  00100E                     l1125:
  1334                           
  1335                           ;keypad.c: 20:   if (((keys) & (1<<(i)))){
  1336  00100E  C004  F001         	movff	kpReadKey@i,??_kpReadKey
  1337  001012  0E01               	movlw	1
  1338  001014  6E02               	movwf	(??_kpReadKey+1)^0,c
  1339  001016  0E00               	movlw	0
  1340  001018  6E03               	movwf	(??_kpReadKey+2)^0,c
  1341  00101A  2A01               	incf	??_kpReadKey^0,f,c
  1342  00101C  EF13  F008         	goto	u564
  1343  001020                     u565:
  1344  001020  90D8               	bcf	status,0,c
  1345  001022  3602               	rlcf	(??_kpReadKey+1)^0,f,c
  1346  001024  3603               	rlcf	(??_kpReadKey+2)^0,f,c
  1347  001026                     u564:
  1348  001026  2E01               	decfsz	??_kpReadKey^0,f,c
  1349  001028  EF10  F008         	goto	u565
  1350  00102C  501F               	movf	_keys^0,w,c
  1351  00102E  1602               	andwf	(??_kpReadKey+1)^0,f,c
  1352  001030  5020               	movf	(_keys+1)^0,w,c
  1353  001032  1603               	andwf	(??_kpReadKey+2)^0,f,c
  1354  001034  5002               	movf	(??_kpReadKey+1)^0,w,c
  1355  001036  1003               	iorwf	(??_kpReadKey+2)^0,w,c
  1356  001038  B4D8               	btfsc	status,2,c
  1357  00103A  EF21  F008         	goto	u571
  1358  00103E  EF23  F008         	goto	u570
  1359  001042                     u571:
  1360  001042  EF2D  F008         	goto	l1131
  1361  001046                     u570:
  1362  001046                     
  1363                           ;keypad.c: 21:    return charKey[i];
  1364  001046  0E11               	movlw	low _charKey
  1365  001048  2404               	addwf	kpReadKey@i^0,w,c
  1366  00104A  6EF6               	movwf	tblptrl,c
  1367  00104C  0E06               	movlw	high _charKey
  1368  00104E  2005               	addwfc	(kpReadKey@i+1)^0,w,c
  1369  001050  6EF7               	movwf	tblptrh,c
  1370  001052                     	if	0	;There are less than 3 active tblptr bytes
  1371  001052                     	endif
  1372  001052  0008               	tblrd		*
  1373  001054  50F5               	movf	tablat,w,c
  1374  001056  EF3E  F008         	goto	l109
  1375  00105A                     l1131:
  1376                           
  1377                           ;keypad.c: 23:  }
  1378  00105A  4A04               	infsnz	kpReadKey@i^0,f,c
  1379  00105C  2A05               	incf	(kpReadKey@i+1)^0,f,c
  1380  00105E  BE05               	btfsc	(kpReadKey@i+1)^0,7,c
  1381  001060  EF3B  F008         	goto	u581
  1382  001064  5005               	movf	(kpReadKey@i+1)^0,w,c
  1383  001066  E109               	bnz	u580
  1384  001068  0E0A               	movlw	10
  1385  00106A  5C04               	subwf	kpReadKey@i^0,w,c
  1386  00106C  A0D8               	btfss	status,0,c
  1387  00106E  EF3B  F008         	goto	u581
  1388  001072  EF3D  F008         	goto	u580
  1389  001076                     u581:
  1390  001076  EF07  F008         	goto	l1125
  1391  00107A                     u580:
  1392  00107A                     
  1393                           ;keypad.c: 25:  return 0;
  1394  00107A  0E00               	movlw	0
  1395  00107C                     l109:
  1396  00107C  0012               	return		;funcret
  1397  00107E                     __end_of_kpReadKey:
  1398                           	callstack 0
  1399                           
  1400 ;; *************** function _kpRead *****************
  1401 ;; Defined at:
  1402 ;;		line 14 in file "keypad.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  2    0[COMRAM] unsigned int 
  1409 ;; Registers used:
  1410 ;;		None
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1416 ;;      Params:         2       0       0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0
  1419 ;;      Totals:         2       0       0       0       0       0       0
  1420 ;;Total ram usage:        2 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           	psect	text11
  1430  001342                     __ptext11:
  1431                           	callstack 0
  1432  001342                     _kpRead:
  1433                           	callstack 30
  1434  001342                     
  1435                           ;keypad.c: 15:     return keys;
  1436  001342  C01F  F001         	movff	_keys,?_kpRead
  1437  001346  C020  F002         	movff	_keys+1,?_kpRead+1
  1438  00134A  0012               	return		;funcret
  1439  00134C                     __end_of_kpRead:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _kpInit *****************
  1443 ;; Defined at:
  1444 ;;		line 54 in file "keypad.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;		None
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;		None
  1449 ;; Return value:  Size  Location     Type
  1450 ;;                  1    wreg      void 
  1451 ;; Registers used:
  1452 ;;		wreg, status,2, status,0, cstack
  1453 ;; Tracked objects:
  1454 ;;		On entry : 0/0
  1455 ;;		On exit  : 0/0
  1456 ;;		Unchanged: 0/0
  1457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1458 ;;      Params:         0       0       0       0       0       0       0
  1459 ;;      Locals:         0       0       0       0       0       0       0
  1460 ;;      Temps:          0       0       0       0       0       0       0
  1461 ;;      Totals:         0       0       0       0       0       0       0
  1462 ;;Total ram usage:        0 bytes
  1463 ;; Hardware stack levels used: 1
  1464 ;; Hardware stack levels required when called: 2
  1465 ;; This function calls:
  1466 ;;		_pinMode
  1467 ;;		_soInit
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text12
  1474  001210                     __ptext12:
  1475                           	callstack 0
  1476  001210                     _kpInit:
  1477                           	callstack 28
  1478  001210                     
  1479                           ;keypad.c: 55:   soInit();
  1480  001210  ECE9  F008         	call	_soInit	;wreg free
  1481                           
  1482                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  1483  001214  0E00               	movlw	0
  1484  001216  6E02               	movwf	(pinMode@pin+1)^0,c
  1485  001218  0E0A               	movlw	10
  1486  00121A  6E01               	movwf	pinMode@pin^0,c
  1487  00121C  0E00               	movlw	0
  1488  00121E  6E04               	movwf	(pinMode@type+1)^0,c
  1489  001220  0E01               	movlw	1
  1490  001222  6E03               	movwf	pinMode@type^0,c
  1491  001224  EC23  F003         	call	_pinMode	;wreg free
  1492                           
  1493                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  1494  001228  0E00               	movlw	0
  1495  00122A  6E02               	movwf	(pinMode@pin+1)^0,c
  1496  00122C  0E09               	movlw	9
  1497  00122E  6E01               	movwf	pinMode@pin^0,c
  1498  001230  0E00               	movlw	0
  1499  001232  6E04               	movwf	(pinMode@type+1)^0,c
  1500  001234  0E01               	movlw	1
  1501  001236  6E03               	movwf	pinMode@type^0,c
  1502  001238  EC23  F003         	call	_pinMode	;wreg free
  1503  00123C                     
  1504                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  1505  00123C  0E0C               	movlw	12
  1506  00123E  6EC1               	movwf	193,c	;volatile
  1507  001240  0012               	return		;funcret
  1508  001242                     __end_of_kpInit:
  1509                           	callstack 0
  1510                           
  1511 ;; *************** function _soInit *****************
  1512 ;; Defined at:
  1513 ;;		line 3 in file "so.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1527 ;;      Params:         0       0       0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0       0       0
  1529 ;;      Temps:          0       0       0       0       0       0       0
  1530 ;;      Totals:         0       0       0       0       0       0       0
  1531 ;;Total ram usage:        0 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; Hardware stack levels required when called: 1
  1534 ;; This function calls:
  1535 ;;		_pinMode
  1536 ;; This function is called by:
  1537 ;;		_kpInit
  1538 ;;		_lcdInit
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text13
  1544  0011D2                     __ptext13:
  1545                           	callstack 0
  1546  0011D2                     _soInit:
  1547                           	callstack 29
  1548  0011D2                     
  1549                           ;so.c: 4:  pinMode(PIN_D7, 0);
  1550  0011D2  0E00               	movlw	0
  1551  0011D4  6E02               	movwf	(pinMode@pin+1)^0,c
  1552  0011D6  0E1F               	movlw	31
  1553  0011D8  6E01               	movwf	pinMode@pin^0,c
  1554  0011DA  0E00               	movlw	0
  1555  0011DC  6E04               	movwf	(pinMode@type+1)^0,c
  1556  0011DE  0E00               	movlw	0
  1557  0011E0  6E03               	movwf	pinMode@type^0,c
  1558  0011E2  EC23  F003         	call	_pinMode	;wreg free
  1559                           
  1560                           ;so.c: 5:  pinMode(PIN_B0, 0);
  1561  0011E6  0E00               	movlw	0
  1562  0011E8  6E02               	movwf	(pinMode@pin+1)^0,c
  1563  0011EA  0E08               	movlw	8
  1564  0011EC  6E01               	movwf	pinMode@pin^0,c
  1565  0011EE  0E00               	movlw	0
  1566  0011F0  6E04               	movwf	(pinMode@type+1)^0,c
  1567  0011F2  0E00               	movlw	0
  1568  0011F4  6E03               	movwf	pinMode@type^0,c
  1569  0011F6  EC23  F003         	call	_pinMode	;wreg free
  1570                           
  1571                           ;so.c: 6:  pinMode(PIN_D6, 0);
  1572  0011FA  0E00               	movlw	0
  1573  0011FC  6E02               	movwf	(pinMode@pin+1)^0,c
  1574  0011FE  0E1E               	movlw	30
  1575  001200  6E01               	movwf	pinMode@pin^0,c
  1576  001202  0E00               	movlw	0
  1577  001204  6E04               	movwf	(pinMode@type+1)^0,c
  1578  001206  0E00               	movlw	0
  1579  001208  6E03               	movwf	pinMode@type^0,c
  1580  00120A  EC23  F003         	call	_pinMode	;wreg free
  1581  00120E  0012               	return		;funcret
  1582  001210                     __end_of_soInit:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _pinMode *****************
  1586 ;; Defined at:
  1587 ;;		line 54 in file "io.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  pin             2    0[COMRAM] int 
  1590 ;;  type            2    2[COMRAM] int 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;		None
  1593 ;; Return value:  Size  Location     Type
  1594 ;;                  1    wreg      void 
  1595 ;; Registers used:
  1596 ;;		wreg, status,2, status,0
  1597 ;; Tracked objects:
  1598 ;;		On entry : 0/0
  1599 ;;		On exit  : 0/0
  1600 ;;		Unchanged: 0/0
  1601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1602 ;;      Params:         4       0       0       0       0       0       0
  1603 ;;      Locals:         0       0       0       0       0       0       0
  1604 ;;      Temps:          2       0       0       0       0       0       0
  1605 ;;      Totals:         6       0       0       0       0       0       0
  1606 ;;Total ram usage:        6 bytes
  1607 ;; Hardware stack levels used: 1
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_kpInit
  1612 ;;		_lcdInit
  1613 ;;		_soInit
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text14
  1619  000646                     __ptext14:
  1620                           	callstack 0
  1621  000646                     _pinMode:
  1622                           	callstack 29
  1623  000646                     
  1624                           ;io.c: 56:     if(pin <8){
  1625  000646  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1626  000648  EF31  F003         	goto	u1000
  1627  00064C  5002               	movf	(pinMode@pin+1)^0,w,c
  1628  00064E  E107               	bnz	u1001
  1629  000650  0E08               	movlw	8
  1630  000652  5C01               	subwf	pinMode@pin^0,w,c
  1631  000654  B0D8               	btfsc	status,0,c
  1632  000656  EF2F  F003         	goto	u1001
  1633  00065A  EF31  F003         	goto	u1000
  1634  00065E                     u1001:
  1635  00065E  EF5B  F003         	goto	l1349
  1636  000662                     u1000:
  1637  000662                     
  1638                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  1639  000662  5003               	movf	pinMode@type^0,w,c
  1640  000664  1004               	iorwf	(pinMode@type+1)^0,w,c
  1641  000666  B4D8               	btfsc	status,2,c
  1642  000668  EF38  F003         	goto	u1011
  1643  00066C  EF3A  F003         	goto	u1010
  1644  000670                     u1011:
  1645  000670  EF4A  F003         	goto	l1347
  1646  000674                     u1010:
  1647  000674  C001  F005         	movff	pinMode@pin,??_pinMode
  1648  000678  0E01               	movlw	1
  1649  00067A  6E06               	movwf	(??_pinMode+1)^0,c
  1650  00067C  2A05               	incf	??_pinMode^0,f,c
  1651  00067E  EF43  F003         	goto	u1024
  1652  000682                     u1025:
  1653  000682  90D8               	bcf	status,0,c
  1654  000684  3606               	rlcf	(??_pinMode+1)^0,f,c
  1655  000686                     u1024:
  1656  000686  2E05               	decfsz	??_pinMode^0,f,c
  1657  000688  EF41  F003         	goto	u1025
  1658  00068C  5006               	movf	(??_pinMode+1)^0,w,c
  1659  00068E  1292               	iorwf	146,f,c	;volatile
  1660  000690  EF49  F004         	goto	l86
  1661  000694                     l1347:
  1662  000694  C001  F005         	movff	pinMode@pin,??_pinMode
  1663  000698  0E01               	movlw	1
  1664  00069A  6E06               	movwf	(??_pinMode+1)^0,c
  1665  00069C  2A05               	incf	??_pinMode^0,f,c
  1666  00069E  EF53  F003         	goto	u1034
  1667  0006A2                     u1035:
  1668  0006A2  90D8               	bcf	status,0,c
  1669  0006A4  3606               	rlcf	(??_pinMode+1)^0,f,c
  1670  0006A6                     u1034:
  1671  0006A6  2E05               	decfsz	??_pinMode^0,f,c
  1672  0006A8  EF51  F003         	goto	u1035
  1673  0006AC  5006               	movf	(??_pinMode+1)^0,w,c
  1674  0006AE  0AFF               	xorlw	255
  1675  0006B0  1692               	andwf	146,f,c	;volatile
  1676  0006B2  EF49  F004         	goto	l86
  1677  0006B6                     l1349:
  1678  0006B6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1679  0006B8  EF69  F003         	goto	u1040
  1680  0006BC  5002               	movf	(pinMode@pin+1)^0,w,c
  1681  0006BE  E107               	bnz	u1041
  1682  0006C0  0E10               	movlw	16
  1683  0006C2  5C01               	subwf	pinMode@pin^0,w,c
  1684  0006C4  B0D8               	btfsc	status,0,c
  1685  0006C6  EF67  F003         	goto	u1041
  1686  0006CA  EF69  F003         	goto	u1040
  1687  0006CE                     u1041:
  1688  0006CE  EF97  F003         	goto	l1357
  1689  0006D2                     u1040:
  1690  0006D2                     
  1691                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  1692  0006D2  5003               	movf	pinMode@type^0,w,c
  1693  0006D4  1004               	iorwf	(pinMode@type+1)^0,w,c
  1694  0006D6  B4D8               	btfsc	status,2,c
  1695  0006D8  EF70  F003         	goto	u1051
  1696  0006DC  EF72  F003         	goto	u1050
  1697  0006E0                     u1051:
  1698  0006E0  EF84  F003         	goto	l1355
  1699  0006E4                     u1050:
  1700  0006E4  C001  F005         	movff	pinMode@pin,??_pinMode
  1701  0006E8  0EF8               	movlw	-8
  1702  0006EA  2605               	addwf	??_pinMode^0,f,c
  1703  0006EC  0E01               	movlw	1
  1704  0006EE  6E06               	movwf	(??_pinMode+1)^0,c
  1705  0006F0  2A05               	incf	??_pinMode^0,f,c
  1706  0006F2  EF7D  F003         	goto	u1064
  1707  0006F6                     u1065:
  1708  0006F6  90D8               	bcf	status,0,c
  1709  0006F8  3606               	rlcf	(??_pinMode+1)^0,f,c
  1710  0006FA                     u1064:
  1711  0006FA  2E05               	decfsz	??_pinMode^0,f,c
  1712  0006FC  EF7B  F003         	goto	u1065
  1713  000700  5006               	movf	(??_pinMode+1)^0,w,c
  1714  000702  1293               	iorwf	147,f,c	;volatile
  1715  000704  EF49  F004         	goto	l86
  1716  000708                     l1355:
  1717  000708  C001  F005         	movff	pinMode@pin,??_pinMode
  1718  00070C  0EF8               	movlw	-8
  1719  00070E  2605               	addwf	??_pinMode^0,f,c
  1720  000710  0E01               	movlw	1
  1721  000712  6E06               	movwf	(??_pinMode+1)^0,c
  1722  000714  2A05               	incf	??_pinMode^0,f,c
  1723  000716  EF8F  F003         	goto	u1074
  1724  00071A                     u1075:
  1725  00071A  90D8               	bcf	status,0,c
  1726  00071C  3606               	rlcf	(??_pinMode+1)^0,f,c
  1727  00071E                     u1074:
  1728  00071E  2E05               	decfsz	??_pinMode^0,f,c
  1729  000720  EF8D  F003         	goto	u1075
  1730  000724  5006               	movf	(??_pinMode+1)^0,w,c
  1731  000726  0AFF               	xorlw	255
  1732  000728  1693               	andwf	147,f,c	;volatile
  1733  00072A  EF49  F004         	goto	l86
  1734  00072E                     l1357:
  1735  00072E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1736  000730  EFA5  F003         	goto	u1080
  1737  000734  5002               	movf	(pinMode@pin+1)^0,w,c
  1738  000736  E107               	bnz	u1081
  1739  000738  0E18               	movlw	24
  1740  00073A  5C01               	subwf	pinMode@pin^0,w,c
  1741  00073C  B0D8               	btfsc	status,0,c
  1742  00073E  EFA3  F003         	goto	u1081
  1743  000742  EFA5  F003         	goto	u1080
  1744  000746                     u1081:
  1745  000746  EFD3  F003         	goto	l1365
  1746  00074A                     u1080:
  1747  00074A                     
  1748                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  1749  00074A  5003               	movf	pinMode@type^0,w,c
  1750  00074C  1004               	iorwf	(pinMode@type+1)^0,w,c
  1751  00074E  B4D8               	btfsc	status,2,c
  1752  000750  EFAC  F003         	goto	u1091
  1753  000754  EFAE  F003         	goto	u1090
  1754  000758                     u1091:
  1755  000758  EFC0  F003         	goto	l1363
  1756  00075C                     u1090:
  1757  00075C  C001  F005         	movff	pinMode@pin,??_pinMode
  1758  000760  0EF0               	movlw	-16
  1759  000762  2605               	addwf	??_pinMode^0,f,c
  1760  000764  0E01               	movlw	1
  1761  000766  6E06               	movwf	(??_pinMode+1)^0,c
  1762  000768  2A05               	incf	??_pinMode^0,f,c
  1763  00076A  EFB9  F003         	goto	u1104
  1764  00076E                     u1105:
  1765  00076E  90D8               	bcf	status,0,c
  1766  000770  3606               	rlcf	(??_pinMode+1)^0,f,c
  1767  000772                     u1104:
  1768  000772  2E05               	decfsz	??_pinMode^0,f,c
  1769  000774  EFB7  F003         	goto	u1105
  1770  000778  5006               	movf	(??_pinMode+1)^0,w,c
  1771  00077A  1294               	iorwf	148,f,c	;volatile
  1772  00077C  EF49  F004         	goto	l86
  1773  000780                     l1363:
  1774  000780  C001  F005         	movff	pinMode@pin,??_pinMode
  1775  000784  0EF0               	movlw	-16
  1776  000786  2605               	addwf	??_pinMode^0,f,c
  1777  000788  0E01               	movlw	1
  1778  00078A  6E06               	movwf	(??_pinMode+1)^0,c
  1779  00078C  2A05               	incf	??_pinMode^0,f,c
  1780  00078E  EFCB  F003         	goto	u1114
  1781  000792                     u1115:
  1782  000792  90D8               	bcf	status,0,c
  1783  000794  3606               	rlcf	(??_pinMode+1)^0,f,c
  1784  000796                     u1114:
  1785  000796  2E05               	decfsz	??_pinMode^0,f,c
  1786  000798  EFC9  F003         	goto	u1115
  1787  00079C  5006               	movf	(??_pinMode+1)^0,w,c
  1788  00079E  0AFF               	xorlw	255
  1789  0007A0  1694               	andwf	148,f,c	;volatile
  1790  0007A2  EF49  F004         	goto	l86
  1791  0007A6                     l1365:
  1792  0007A6  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1793  0007A8  EFE1  F003         	goto	u1120
  1794  0007AC  5002               	movf	(pinMode@pin+1)^0,w,c
  1795  0007AE  E107               	bnz	u1121
  1796  0007B0  0E20               	movlw	32
  1797  0007B2  5C01               	subwf	pinMode@pin^0,w,c
  1798  0007B4  B0D8               	btfsc	status,0,c
  1799  0007B6  EFDF  F003         	goto	u1121
  1800  0007BA  EFE1  F003         	goto	u1120
  1801  0007BE                     u1121:
  1802  0007BE  EF0F  F004         	goto	l1373
  1803  0007C2                     u1120:
  1804  0007C2                     
  1805                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  1806  0007C2  5003               	movf	pinMode@type^0,w,c
  1807  0007C4  1004               	iorwf	(pinMode@type+1)^0,w,c
  1808  0007C6  B4D8               	btfsc	status,2,c
  1809  0007C8  EFE8  F003         	goto	u1131
  1810  0007CC  EFEA  F003         	goto	u1130
  1811  0007D0                     u1131:
  1812  0007D0  EFFC  F003         	goto	l1371
  1813  0007D4                     u1130:
  1814  0007D4  C001  F005         	movff	pinMode@pin,??_pinMode
  1815  0007D8  0EE8               	movlw	-24
  1816  0007DA  2605               	addwf	??_pinMode^0,f,c
  1817  0007DC  0E01               	movlw	1
  1818  0007DE  6E06               	movwf	(??_pinMode+1)^0,c
  1819  0007E0  2A05               	incf	??_pinMode^0,f,c
  1820  0007E2  EFF5  F003         	goto	u1144
  1821  0007E6                     u1145:
  1822  0007E6  90D8               	bcf	status,0,c
  1823  0007E8  3606               	rlcf	(??_pinMode+1)^0,f,c
  1824  0007EA                     u1144:
  1825  0007EA  2E05               	decfsz	??_pinMode^0,f,c
  1826  0007EC  EFF3  F003         	goto	u1145
  1827  0007F0  5006               	movf	(??_pinMode+1)^0,w,c
  1828  0007F2  1295               	iorwf	149,f,c	;volatile
  1829  0007F4  EF49  F004         	goto	l86
  1830  0007F8                     l1371:
  1831  0007F8  C001  F005         	movff	pinMode@pin,??_pinMode
  1832  0007FC  0EE8               	movlw	-24
  1833  0007FE  2605               	addwf	??_pinMode^0,f,c
  1834  000800  0E01               	movlw	1
  1835  000802  6E06               	movwf	(??_pinMode+1)^0,c
  1836  000804  2A05               	incf	??_pinMode^0,f,c
  1837  000806  EF07  F004         	goto	u1154
  1838  00080A                     u1155:
  1839  00080A  90D8               	bcf	status,0,c
  1840  00080C  3606               	rlcf	(??_pinMode+1)^0,f,c
  1841  00080E                     u1154:
  1842  00080E  2E05               	decfsz	??_pinMode^0,f,c
  1843  000810  EF05  F004         	goto	u1155
  1844  000814  5006               	movf	(??_pinMode+1)^0,w,c
  1845  000816  0AFF               	xorlw	255
  1846  000818  1695               	andwf	149,f,c	;volatile
  1847  00081A  EF49  F004         	goto	l86
  1848  00081E                     l1373:
  1849  00081E  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  1850  000820  EF1D  F004         	goto	u1160
  1851  000824  5002               	movf	(pinMode@pin+1)^0,w,c
  1852  000826  E107               	bnz	u1161
  1853  000828  0E28               	movlw	40
  1854  00082A  5C01               	subwf	pinMode@pin^0,w,c
  1855  00082C  B0D8               	btfsc	status,0,c
  1856  00082E  EF1B  F004         	goto	u1161
  1857  000832  EF1D  F004         	goto	u1160
  1858  000836                     u1161:
  1859  000836  EF49  F004         	goto	l86
  1860  00083A                     u1160:
  1861  00083A                     
  1862                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  1863  00083A  5003               	movf	pinMode@type^0,w,c
  1864  00083C  1004               	iorwf	(pinMode@type+1)^0,w,c
  1865  00083E  B4D8               	btfsc	status,2,c
  1866  000840  EF24  F004         	goto	u1171
  1867  000844  EF26  F004         	goto	u1170
  1868  000848                     u1171:
  1869  000848  EF38  F004         	goto	l1379
  1870  00084C                     u1170:
  1871  00084C  C001  F005         	movff	pinMode@pin,??_pinMode
  1872  000850  0EE0               	movlw	-32
  1873  000852  2605               	addwf	??_pinMode^0,f,c
  1874  000854  0E01               	movlw	1
  1875  000856  6E06               	movwf	(??_pinMode+1)^0,c
  1876  000858  2A05               	incf	??_pinMode^0,f,c
  1877  00085A  EF31  F004         	goto	u1184
  1878  00085E                     u1185:
  1879  00085E  90D8               	bcf	status,0,c
  1880  000860  3606               	rlcf	(??_pinMode+1)^0,f,c
  1881  000862                     u1184:
  1882  000862  2E05               	decfsz	??_pinMode^0,f,c
  1883  000864  EF2F  F004         	goto	u1185
  1884  000868  5006               	movf	(??_pinMode+1)^0,w,c
  1885  00086A  1296               	iorwf	150,f,c	;volatile
  1886  00086C  EF49  F004         	goto	l86
  1887  000870                     l1379:
  1888  000870  C001  F005         	movff	pinMode@pin,??_pinMode
  1889  000874  0EE0               	movlw	-32
  1890  000876  2605               	addwf	??_pinMode^0,f,c
  1891  000878  0E01               	movlw	1
  1892  00087A  6E06               	movwf	(??_pinMode+1)^0,c
  1893  00087C  2A05               	incf	??_pinMode^0,f,c
  1894  00087E  EF43  F004         	goto	u1194
  1895  000882                     u1195:
  1896  000882  90D8               	bcf	status,0,c
  1897  000884  3606               	rlcf	(??_pinMode+1)^0,f,c
  1898  000886                     u1194:
  1899  000886  2E05               	decfsz	??_pinMode^0,f,c
  1900  000888  EF41  F004         	goto	u1195
  1901  00088C  5006               	movf	(??_pinMode+1)^0,w,c
  1902  00088E  0AFF               	xorlw	255
  1903  000890  1696               	andwf	150,f,c	;volatile
  1904  000892                     l86:
  1905  000892  0012               	return		;funcret
  1906  000894                     __end_of_pinMode:
  1907                           	callstack 0
  1908                           
  1909 ;; *************** function _kpDebounce *****************
  1910 ;; Defined at:
  1911 ;;		line 27 in file "keypad.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  i               2   12[COMRAM] int 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1925 ;;      Params:         0       0       0       0       0       0       0
  1926 ;;      Locals:         2       0       0       0       0       0       0
  1927 ;;      Temps:          3       0       0       0       0       0       0
  1928 ;;      Totals:         5       0       0       0       0       0       0
  1929 ;;Total ram usage:        5 bytes
  1930 ;; Hardware stack levels used: 1
  1931 ;; Hardware stack levels required when called: 3
  1932 ;; This function calls:
  1933 ;;		_digitalRead
  1934 ;;		_soWrite
  1935 ;; This function is called by:
  1936 ;;		_main
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text15
  1941  000C4C                     __ptext15:
  1942                           	callstack 0
  1943  000C4C                     _kpDebounce:
  1944                           	callstack 27
  1945  000C4C                     
  1946                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  1947  000C4C  0E00               	movlw	0
  1948  000C4E  6E1E               	movwf	(kpDebounce@newRead+1)^0,c
  1949  000C50  0E00               	movlw	0
  1950  000C52  6E1D               	movwf	kpDebounce@newRead^0,c
  1951                           
  1952                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  1953  000C54  0E00               	movlw	0
  1954  000C56  6E0E               	movwf	(kpDebounce@i+1)^0,c
  1955  000C58  0E00               	movlw	0
  1956  000C5A  6E0D               	movwf	kpDebounce@i^0,c
  1957  000C5C                     l1441:
  1958  000C5C  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  1959  000C5E  EF3A  F006         	goto	u1311
  1960  000C62  500E               	movf	(kpDebounce@i+1)^0,w,c
  1961  000C64  E109               	bnz	u1310
  1962  000C66  0E05               	movlw	5
  1963  000C68  5C0D               	subwf	kpDebounce@i^0,w,c
  1964  000C6A  A0D8               	btfss	status,0,c
  1965  000C6C  EF3A  F006         	goto	u1311
  1966  000C70  EF3C  F006         	goto	u1310
  1967  000C74                     u1311:
  1968  000C74  EF3E  F006         	goto	l1445
  1969  000C78                     u1310:
  1970  000C78  EF9F  F006         	goto	l1457
  1971  000C7C                     l1445:
  1972                           
  1973                           ;keypad.c: 35:       soWrite(1<<(i+3));
  1974  000C7C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  1975  000C80  0E03               	movlw	3
  1976  000C82  260A               	addwf	??_kpDebounce^0,f,c
  1977  000C84  0E01               	movlw	1
  1978  000C86  6E0B               	movwf	(??_kpDebounce+1)^0,c
  1979  000C88  0E00               	movlw	0
  1980  000C8A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  1981  000C8C  2A0A               	incf	??_kpDebounce^0,f,c
  1982  000C8E  EF4C  F006         	goto	u1324
  1983  000C92                     u1325:
  1984  000C92  90D8               	bcf	status,0,c
  1985  000C94  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  1986  000C96  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  1987  000C98                     u1324:
  1988  000C98  2E0A               	decfsz	??_kpDebounce^0,f,c
  1989  000C9A  EF49  F006         	goto	u1325
  1990  000C9E  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  1991  000CA2  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  1992  000CA6  ECA1  F008         	call	_soWrite	;wreg free
  1993                           
  1994                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  1995  000CAA  0E00               	movlw	0
  1996  000CAC  6E02               	movwf	(digitalRead@pin+1)^0,c
  1997  000CAE  0E0A               	movlw	10
  1998  000CB0  6E01               	movwf	digitalRead@pin^0,c
  1999  000CB2  EC71  F005         	call	_digitalRead	;wreg free
  2000  000CB6  5001               	movf	?_digitalRead^0,w,c
  2001  000CB8  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2002  000CBA  B4D8               	btfsc	status,2,c
  2003  000CBC  EF62  F006         	goto	u1331
  2004  000CC0  EF64  F006         	goto	u1330
  2005  000CC4                     u1331:
  2006  000CC4  EF77  F006         	goto	l1449
  2007  000CC8                     u1330:
  2008  000CC8                     
  2009                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  2010  000CC8  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2011  000CCC  0E01               	movlw	1
  2012  000CCE  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2013  000CD0  0E00               	movlw	0
  2014  000CD2  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2015  000CD4  2A0A               	incf	??_kpDebounce^0,f,c
  2016  000CD6  EF70  F006         	goto	u1344
  2017  000CDA                     u1345:
  2018  000CDA  90D8               	bcf	status,0,c
  2019  000CDC  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2020  000CDE  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2021  000CE0                     u1344:
  2022  000CE0  2E0A               	decfsz	??_kpDebounce^0,f,c
  2023  000CE2  EF6D  F006         	goto	u1345
  2024  000CE6  500B               	movf	(??_kpDebounce+1)^0,w,c
  2025  000CE8  121D               	iorwf	kpDebounce@newRead^0,f,c
  2026  000CEA  500C               	movf	(??_kpDebounce+2)^0,w,c
  2027  000CEC  121E               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2028  000CEE                     l1449:
  2029                           
  2030                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  2031  000CEE  0E00               	movlw	0
  2032  000CF0  6E02               	movwf	(digitalRead@pin+1)^0,c
  2033  000CF2  0E09               	movlw	9
  2034  000CF4  6E01               	movwf	digitalRead@pin^0,c
  2035  000CF6  EC71  F005         	call	_digitalRead	;wreg free
  2036  000CFA  5001               	movf	?_digitalRead^0,w,c
  2037  000CFC  1002               	iorwf	(?_digitalRead+1)^0,w,c
  2038  000CFE  B4D8               	btfsc	status,2,c
  2039  000D00  EF84  F006         	goto	u1351
  2040  000D04  EF86  F006         	goto	u1350
  2041  000D08                     u1351:
  2042  000D08  EF9B  F006         	goto	l1453
  2043  000D0C                     u1350:
  2044  000D0C                     
  2045                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  2046  000D0C  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  2047  000D10  0E05               	movlw	5
  2048  000D12  260A               	addwf	??_kpDebounce^0,f,c
  2049  000D14  0E01               	movlw	1
  2050  000D16  6E0B               	movwf	(??_kpDebounce+1)^0,c
  2051  000D18  0E00               	movlw	0
  2052  000D1A  6E0C               	movwf	(??_kpDebounce+2)^0,c
  2053  000D1C  2A0A               	incf	??_kpDebounce^0,f,c
  2054  000D1E  EF94  F006         	goto	u1364
  2055  000D22                     u1365:
  2056  000D22  90D8               	bcf	status,0,c
  2057  000D24  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  2058  000D26  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  2059  000D28                     u1364:
  2060  000D28  2E0A               	decfsz	??_kpDebounce^0,f,c
  2061  000D2A  EF91  F006         	goto	u1365
  2062  000D2E  500B               	movf	(??_kpDebounce+1)^0,w,c
  2063  000D30  121D               	iorwf	kpDebounce@newRead^0,f,c
  2064  000D32  500C               	movf	(??_kpDebounce+2)^0,w,c
  2065  000D34  121E               	iorwf	(kpDebounce@newRead+1)^0,f,c
  2066  000D36                     l1453:
  2067                           
  2068                           ;keypad.c: 42:     }
  2069  000D36  4A0D               	infsnz	kpDebounce@i^0,f,c
  2070  000D38  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  2071  000D3A  EF2E  F006         	goto	l1441
  2072  000D3E                     l1457:
  2073                           
  2074                           ;keypad.c: 43:     if (oldRead == newRead) {
  2075  000D3E  501D               	movf	kpDebounce@newRead^0,w,c
  2076  000D40  181B               	xorwf	kpDebounce@oldRead^0,w,c
  2077  000D42  E107               	bnz	u1371
  2078  000D44  501E               	movf	(kpDebounce@newRead+1)^0,w,c
  2079  000D46  181C               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  2080  000D48  A4D8               	btfss	status,2,c
  2081  000D4A  EFA9  F006         	goto	u1371
  2082  000D4E  EFAB  F006         	goto	u1370
  2083  000D52                     u1371:
  2084  000D52  EFAE  F006         	goto	l1461
  2085  000D56                     u1370:
  2086  000D56                     
  2087                           ;keypad.c: 44:         tempo--;
  2088  000D56  0621               	decf	kpDebounce@tempo^0,f,c
  2089                           
  2090                           ;keypad.c: 45:     } else {
  2091  000D58  EFB4  F006         	goto	l123
  2092  000D5C                     l1461:
  2093                           
  2094                           ;keypad.c: 46:         tempo = 1;
  2095  000D5C  0E01               	movlw	1
  2096  000D5E  6E21               	movwf	kpDebounce@tempo^0,c
  2097  000D60                     
  2098                           ;keypad.c: 47:         oldRead = newRead;
  2099  000D60  C01D  F01B         	movff	kpDebounce@newRead,kpDebounce@oldRead
  2100  000D64  C01E  F01C         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  2101  000D68                     l123:
  2102                           
  2103                           ;keypad.c: 49:     if (tempo == 0) {
  2104  000D68  5021               	movf	kpDebounce@tempo^0,w,c
  2105  000D6A  A4D8               	btfss	status,2,c
  2106  000D6C  EFBA  F006         	goto	u1381
  2107  000D70  EFBC  F006         	goto	u1380
  2108  000D74                     u1381:
  2109  000D74  EFC0  F006         	goto	l125
  2110  000D78                     u1380:
  2111  000D78                     
  2112                           ;keypad.c: 50:         keys = oldRead;
  2113  000D78  C01B  F01F         	movff	kpDebounce@oldRead,_keys
  2114  000D7C  C01C  F020         	movff	kpDebounce@oldRead+1,_keys+1
  2115  000D80                     l125:
  2116  000D80  0012               	return		;funcret
  2117  000D82                     __end_of_kpDebounce:
  2118                           	callstack 0
  2119                           
  2120 ;; *************** function _soWrite *****************
  2121 ;; Defined at:
  2122 ;;		line 18 in file "so.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  value           2    6[COMRAM] int 
  2125 ;; Auto vars:     Size  Location     Type
  2126 ;;  i               1    8[COMRAM] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1    wreg      void 
  2129 ;; Registers used:
  2130 ;;		wreg, status,2, status,0, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2136 ;;      Params:         2       0       0       0       0       0       0
  2137 ;;      Locals:         1       0       0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0
  2139 ;;      Totals:         3       0       0       0       0       0       0
  2140 ;;Total ram usage:        3 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 2
  2143 ;; This function calls:
  2144 ;;		_PulseClockData
  2145 ;;		_PulseEnClock
  2146 ;;		_digitalWrite
  2147 ;; This function is called by:
  2148 ;;		_kpDebounce
  2149 ;;		_pushNibble
  2150 ;;		_pushByte
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text16
  2156  001142                     __ptext16:
  2157                           	callstack 0
  2158  001142                     _soWrite:
  2159                           	callstack 28
  2160  001142                     
  2161                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  2162  001142  0E00               	movlw	0
  2163  001144  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2164  001146  0E08               	movlw	8
  2165  001148  6E01               	movwf	digitalWrite@pin^0,c
  2166  00114A  0E00               	movlw	0
  2167  00114C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2168  00114E  0E00               	movlw	0
  2169  001150  6E03               	movwf	digitalWrite@value^0,c
  2170  001152  EC4A  F004         	call	_digitalWrite	;wreg free
  2171  001156                     
  2172                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  2173  001156  0E00               	movlw	0
  2174  001158  6E09               	movwf	soWrite@i^0,c
  2175  00115A                     l1325:
  2176                           
  2177                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  2178  00115A  0E00               	movlw	0
  2179  00115C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2180  00115E  0E1E               	movlw	30
  2181  001160  6E01               	movwf	digitalWrite@pin^0,c
  2182  001162  0E80               	movlw	128
  2183  001164  1407               	andwf	soWrite@value^0,w,c
  2184  001166  6E03               	movwf	digitalWrite@value^0,c
  2185  001168  6A04               	clrf	(digitalWrite@value+1)^0,c
  2186  00116A  EC4A  F004         	call	_digitalWrite	;wreg free
  2187                           
  2188                           ;so.c: 23:   PulseClockData();
  2189  00116E  EC4E  F009         	call	_PulseClockData	;wreg free
  2190  001172                     
  2191                           ;so.c: 24:   value <<= 1;
  2192  001172  90D8               	bcf	status,0,c
  2193  001174  3607               	rlcf	soWrite@value^0,f,c
  2194  001176  3608               	rlcf	(soWrite@value+1)^0,f,c
  2195  001178                     
  2196                           ;so.c: 25:  }
  2197  001178  2A09               	incf	soWrite@i^0,f,c
  2198  00117A  0E07               	movlw	7
  2199  00117C  6409               	cpfsgt	soWrite@i^0,c
  2200  00117E  EFC3  F008         	goto	u991
  2201  001182  EFC5  F008         	goto	u990
  2202  001186                     u991:
  2203  001186  EFAD  F008         	goto	l1325
  2204  00118A                     u990:
  2205  00118A                     
  2206                           ;so.c: 26:  PulseEnClock();
  2207  00118A  EC39  F009         	call	_PulseEnClock	;wreg free
  2208  00118E  0012               	return		;funcret
  2209  001190                     __end_of_soWrite:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _PulseEnClock *****************
  2213 ;; Defined at:
  2214 ;;		line 9 in file "so.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		wreg, status,2, status,0, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2228 ;;      Params:         0       0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; Hardware stack levels required when called: 1
  2235 ;; This function calls:
  2236 ;;		_digitalWrite
  2237 ;; This function is called by:
  2238 ;;		_soWrite
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text17
  2243  001272                     __ptext17:
  2244                           	callstack 0
  2245  001272                     _PulseEnClock:
  2246                           	callstack 28
  2247  001272                     
  2248                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  2249  001272  0E00               	movlw	0
  2250  001274  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2251  001276  0E1F               	movlw	31
  2252  001278  6E01               	movwf	digitalWrite@pin^0,c
  2253  00127A  0E00               	movlw	0
  2254  00127C  6E04               	movwf	(digitalWrite@value+1)^0,c
  2255  00127E  0E01               	movlw	1
  2256  001280  6E03               	movwf	digitalWrite@value^0,c
  2257  001282  EC4A  F004         	call	_digitalWrite	;wreg free
  2258                           
  2259                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  2260  001286  0E00               	movlw	0
  2261  001288  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2262  00128A  0E1F               	movlw	31
  2263  00128C  6E01               	movwf	digitalWrite@pin^0,c
  2264  00128E  0E00               	movlw	0
  2265  001290  6E04               	movwf	(digitalWrite@value+1)^0,c
  2266  001292  0E00               	movlw	0
  2267  001294  6E03               	movwf	digitalWrite@value^0,c
  2268  001296  EC4A  F004         	call	_digitalWrite	;wreg free
  2269  00129A  0012               	return		;funcret
  2270  00129C                     __end_of_PulseEnClock:
  2271                           	callstack 0
  2272                           
  2273 ;; *************** function _PulseClockData *****************
  2274 ;; Defined at:
  2275 ;;		line 14 in file "so.c"
  2276 ;; Parameters:    Size  Location     Type
  2277 ;;		None
  2278 ;; Auto vars:     Size  Location     Type
  2279 ;;		None
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2289 ;;      Params:         0       0       0       0       0       0       0
  2290 ;;      Locals:         0       0       0       0       0       0       0
  2291 ;;      Temps:          0       0       0       0       0       0       0
  2292 ;;      Totals:         0       0       0       0       0       0       0
  2293 ;;Total ram usage:        0 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 1
  2296 ;; This function calls:
  2297 ;;		_digitalWrite
  2298 ;; This function is called by:
  2299 ;;		_soWrite
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text18
  2304  00129C                     __ptext18:
  2305                           	callstack 0
  2306  00129C                     _PulseClockData:
  2307                           	callstack 28
  2308  00129C                     
  2309                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  2310  00129C  0E00               	movlw	0
  2311  00129E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2312  0012A0  0E08               	movlw	8
  2313  0012A2  6E01               	movwf	digitalWrite@pin^0,c
  2314  0012A4  0E00               	movlw	0
  2315  0012A6  6E04               	movwf	(digitalWrite@value+1)^0,c
  2316  0012A8  0E01               	movlw	1
  2317  0012AA  6E03               	movwf	digitalWrite@value^0,c
  2318  0012AC  EC4A  F004         	call	_digitalWrite	;wreg free
  2319                           
  2320                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  2321  0012B0  0E00               	movlw	0
  2322  0012B2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  2323  0012B4  0E08               	movlw	8
  2324  0012B6  6E01               	movwf	digitalWrite@pin^0,c
  2325  0012B8  0E00               	movlw	0
  2326  0012BA  6E04               	movwf	(digitalWrite@value+1)^0,c
  2327  0012BC  0E00               	movlw	0
  2328  0012BE  6E03               	movwf	digitalWrite@value^0,c
  2329  0012C0  EC4A  F004         	call	_digitalWrite	;wreg free
  2330  0012C4  0012               	return		;funcret
  2331  0012C6                     __end_of_PulseClockData:
  2332                           	callstack 0
  2333                           
  2334 ;; *************** function _digitalWrite *****************
  2335 ;; Defined at:
  2336 ;;		line 14 in file "io.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  pin             2    0[COMRAM] int 
  2339 ;;  value           2    2[COMRAM] int 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;		None
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2351 ;;      Params:         4       0       0       0       0       0       0
  2352 ;;      Locals:         0       0       0       0       0       0       0
  2353 ;;      Temps:          2       0       0       0       0       0       0
  2354 ;;      Totals:         6       0       0       0       0       0       0
  2355 ;;Total ram usage:        6 bytes
  2356 ;; Hardware stack levels used: 1
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_pulseEnablePin
  2361 ;;		_pushNibble
  2362 ;;		_pushByte
  2363 ;;		_PulseEnClock
  2364 ;;		_PulseClockData
  2365 ;;		_soWrite
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text19
  2371  000894                     __ptext19:
  2372                           	callstack 0
  2373  000894                     _digitalWrite:
  2374                           	callstack 29
  2375  000894                     
  2376                           ;io.c: 16:     if(pin <8){
  2377  000894  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2378  000896  EF58  F004         	goto	u790
  2379  00089A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2380  00089C  E107               	bnz	u791
  2381  00089E  0E08               	movlw	8
  2382  0008A0  5C01               	subwf	digitalWrite@pin^0,w,c
  2383  0008A2  B0D8               	btfsc	status,0,c
  2384  0008A4  EF56  F004         	goto	u791
  2385  0008A8  EF58  F004         	goto	u790
  2386  0008AC                     u791:
  2387  0008AC  EF82  F004         	goto	l1281
  2388  0008B0                     u790:
  2389  0008B0                     
  2390                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  2391  0008B0  5003               	movf	digitalWrite@value^0,w,c
  2392  0008B2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2393  0008B4  B4D8               	btfsc	status,2,c
  2394  0008B6  EF5F  F004         	goto	u801
  2395  0008BA  EF61  F004         	goto	u800
  2396  0008BE                     u801:
  2397  0008BE  EF71  F004         	goto	l1279
  2398  0008C2                     u800:
  2399  0008C2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2400  0008C6  0E01               	movlw	1
  2401  0008C8  6E06               	movwf	(??_digitalWrite+1)^0,c
  2402  0008CA  2A05               	incf	??_digitalWrite^0,f,c
  2403  0008CC  EF6A  F004         	goto	u814
  2404  0008D0                     u815:
  2405  0008D0  90D8               	bcf	status,0,c
  2406  0008D2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2407  0008D4                     u814:
  2408  0008D4  2E05               	decfsz	??_digitalWrite^0,f,c
  2409  0008D6  EF68  F004         	goto	u815
  2410  0008DA  5006               	movf	(??_digitalWrite+1)^0,w,c
  2411  0008DC  1280               	iorwf	128,f,c	;volatile
  2412  0008DE  EF70  F005         	goto	l52
  2413  0008E2                     l1279:
  2414  0008E2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2415  0008E6  0E01               	movlw	1
  2416  0008E8  6E06               	movwf	(??_digitalWrite+1)^0,c
  2417  0008EA  2A05               	incf	??_digitalWrite^0,f,c
  2418  0008EC  EF7A  F004         	goto	u824
  2419  0008F0                     u825:
  2420  0008F0  90D8               	bcf	status,0,c
  2421  0008F2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2422  0008F4                     u824:
  2423  0008F4  2E05               	decfsz	??_digitalWrite^0,f,c
  2424  0008F6  EF78  F004         	goto	u825
  2425  0008FA  5006               	movf	(??_digitalWrite+1)^0,w,c
  2426  0008FC  0AFF               	xorlw	255
  2427  0008FE  1680               	andwf	128,f,c	;volatile
  2428  000900  EF70  F005         	goto	l52
  2429  000904                     l1281:
  2430  000904  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2431  000906  EF90  F004         	goto	u830
  2432  00090A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2433  00090C  E107               	bnz	u831
  2434  00090E  0E10               	movlw	16
  2435  000910  5C01               	subwf	digitalWrite@pin^0,w,c
  2436  000912  B0D8               	btfsc	status,0,c
  2437  000914  EF8E  F004         	goto	u831
  2438  000918  EF90  F004         	goto	u830
  2439  00091C                     u831:
  2440  00091C  EFBE  F004         	goto	l1289
  2441  000920                     u830:
  2442  000920                     
  2443                           ;io.c: 20:         pin -=8;
  2444  000920  0EF8               	movlw	248
  2445  000922  2601               	addwf	digitalWrite@pin^0,f,c
  2446  000924  0EFF               	movlw	255
  2447  000926  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2448                           
  2449                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  2450  000928  5003               	movf	digitalWrite@value^0,w,c
  2451  00092A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2452  00092C  B4D8               	btfsc	status,2,c
  2453  00092E  EF9B  F004         	goto	u841
  2454  000932  EF9D  F004         	goto	u840
  2455  000936                     u841:
  2456  000936  EFAD  F004         	goto	l1287
  2457  00093A                     u840:
  2458  00093A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2459  00093E  0E01               	movlw	1
  2460  000940  6E06               	movwf	(??_digitalWrite+1)^0,c
  2461  000942  2A05               	incf	??_digitalWrite^0,f,c
  2462  000944  EFA6  F004         	goto	u854
  2463  000948                     u855:
  2464  000948  90D8               	bcf	status,0,c
  2465  00094A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2466  00094C                     u854:
  2467  00094C  2E05               	decfsz	??_digitalWrite^0,f,c
  2468  00094E  EFA4  F004         	goto	u855
  2469  000952  5006               	movf	(??_digitalWrite+1)^0,w,c
  2470  000954  1281               	iorwf	129,f,c	;volatile
  2471  000956  EF70  F005         	goto	l52
  2472  00095A                     l1287:
  2473  00095A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2474  00095E  0E01               	movlw	1
  2475  000960  6E06               	movwf	(??_digitalWrite+1)^0,c
  2476  000962  2A05               	incf	??_digitalWrite^0,f,c
  2477  000964  EFB6  F004         	goto	u864
  2478  000968                     u865:
  2479  000968  90D8               	bcf	status,0,c
  2480  00096A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2481  00096C                     u864:
  2482  00096C  2E05               	decfsz	??_digitalWrite^0,f,c
  2483  00096E  EFB4  F004         	goto	u865
  2484  000972  5006               	movf	(??_digitalWrite+1)^0,w,c
  2485  000974  0AFF               	xorlw	255
  2486  000976  1681               	andwf	129,f,c	;volatile
  2487  000978  EF70  F005         	goto	l52
  2488  00097C                     l1289:
  2489  00097C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2490  00097E  EFCC  F004         	goto	u870
  2491  000982  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2492  000984  E107               	bnz	u871
  2493  000986  0E18               	movlw	24
  2494  000988  5C01               	subwf	digitalWrite@pin^0,w,c
  2495  00098A  B0D8               	btfsc	status,0,c
  2496  00098C  EFCA  F004         	goto	u871
  2497  000990  EFCC  F004         	goto	u870
  2498  000994                     u871:
  2499  000994  EFFA  F004         	goto	l1297
  2500  000998                     u870:
  2501  000998                     
  2502                           ;io.c: 24:         pin -=16;
  2503  000998  0EF0               	movlw	240
  2504  00099A  2601               	addwf	digitalWrite@pin^0,f,c
  2505  00099C  0EFF               	movlw	255
  2506  00099E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2507                           
  2508                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  2509  0009A0  5003               	movf	digitalWrite@value^0,w,c
  2510  0009A2  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2511  0009A4  B4D8               	btfsc	status,2,c
  2512  0009A6  EFD7  F004         	goto	u881
  2513  0009AA  EFD9  F004         	goto	u880
  2514  0009AE                     u881:
  2515  0009AE  EFE9  F004         	goto	l1295
  2516  0009B2                     u880:
  2517  0009B2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2518  0009B6  0E01               	movlw	1
  2519  0009B8  6E06               	movwf	(??_digitalWrite+1)^0,c
  2520  0009BA  2A05               	incf	??_digitalWrite^0,f,c
  2521  0009BC  EFE2  F004         	goto	u894
  2522  0009C0                     u895:
  2523  0009C0  90D8               	bcf	status,0,c
  2524  0009C2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2525  0009C4                     u894:
  2526  0009C4  2E05               	decfsz	??_digitalWrite^0,f,c
  2527  0009C6  EFE0  F004         	goto	u895
  2528  0009CA  5006               	movf	(??_digitalWrite+1)^0,w,c
  2529  0009CC  1282               	iorwf	130,f,c	;volatile
  2530  0009CE  EF70  F005         	goto	l52
  2531  0009D2                     l1295:
  2532  0009D2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2533  0009D6  0E01               	movlw	1
  2534  0009D8  6E06               	movwf	(??_digitalWrite+1)^0,c
  2535  0009DA  2A05               	incf	??_digitalWrite^0,f,c
  2536  0009DC  EFF2  F004         	goto	u904
  2537  0009E0                     u905:
  2538  0009E0  90D8               	bcf	status,0,c
  2539  0009E2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2540  0009E4                     u904:
  2541  0009E4  2E05               	decfsz	??_digitalWrite^0,f,c
  2542  0009E6  EFF0  F004         	goto	u905
  2543  0009EA  5006               	movf	(??_digitalWrite+1)^0,w,c
  2544  0009EC  0AFF               	xorlw	255
  2545  0009EE  1682               	andwf	130,f,c	;volatile
  2546  0009F0  EF70  F005         	goto	l52
  2547  0009F4                     l1297:
  2548  0009F4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2549  0009F6  EF08  F005         	goto	u910
  2550  0009FA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2551  0009FC  E107               	bnz	u911
  2552  0009FE  0E20               	movlw	32
  2553  000A00  5C01               	subwf	digitalWrite@pin^0,w,c
  2554  000A02  B0D8               	btfsc	status,0,c
  2555  000A04  EF06  F005         	goto	u911
  2556  000A08  EF08  F005         	goto	u910
  2557  000A0C                     u911:
  2558  000A0C  EF36  F005         	goto	l1305
  2559  000A10                     u910:
  2560  000A10                     
  2561                           ;io.c: 28:         pin -=24;
  2562  000A10  0EE8               	movlw	232
  2563  000A12  2601               	addwf	digitalWrite@pin^0,f,c
  2564  000A14  0EFF               	movlw	255
  2565  000A16  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2566                           
  2567                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  2568  000A18  5003               	movf	digitalWrite@value^0,w,c
  2569  000A1A  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2570  000A1C  B4D8               	btfsc	status,2,c
  2571  000A1E  EF13  F005         	goto	u921
  2572  000A22  EF15  F005         	goto	u920
  2573  000A26                     u921:
  2574  000A26  EF25  F005         	goto	l1303
  2575  000A2A                     u920:
  2576  000A2A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2577  000A2E  0E01               	movlw	1
  2578  000A30  6E06               	movwf	(??_digitalWrite+1)^0,c
  2579  000A32  2A05               	incf	??_digitalWrite^0,f,c
  2580  000A34  EF1E  F005         	goto	u934
  2581  000A38                     u935:
  2582  000A38  90D8               	bcf	status,0,c
  2583  000A3A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2584  000A3C                     u934:
  2585  000A3C  2E05               	decfsz	??_digitalWrite^0,f,c
  2586  000A3E  EF1C  F005         	goto	u935
  2587  000A42  5006               	movf	(??_digitalWrite+1)^0,w,c
  2588  000A44  1283               	iorwf	131,f,c	;volatile
  2589  000A46  EF70  F005         	goto	l52
  2590  000A4A                     l1303:
  2591  000A4A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2592  000A4E  0E01               	movlw	1
  2593  000A50  6E06               	movwf	(??_digitalWrite+1)^0,c
  2594  000A52  2A05               	incf	??_digitalWrite^0,f,c
  2595  000A54  EF2E  F005         	goto	u944
  2596  000A58                     u945:
  2597  000A58  90D8               	bcf	status,0,c
  2598  000A5A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2599  000A5C                     u944:
  2600  000A5C  2E05               	decfsz	??_digitalWrite^0,f,c
  2601  000A5E  EF2C  F005         	goto	u945
  2602  000A62  5006               	movf	(??_digitalWrite+1)^0,w,c
  2603  000A64  0AFF               	xorlw	255
  2604  000A66  1683               	andwf	131,f,c	;volatile
  2605  000A68  EF70  F005         	goto	l52
  2606  000A6C                     l1305:
  2607  000A6C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  2608  000A6E  EF44  F005         	goto	u950
  2609  000A72  5002               	movf	(digitalWrite@pin+1)^0,w,c
  2610  000A74  E107               	bnz	u951
  2611  000A76  0E28               	movlw	40
  2612  000A78  5C01               	subwf	digitalWrite@pin^0,w,c
  2613  000A7A  B0D8               	btfsc	status,0,c
  2614  000A7C  EF42  F005         	goto	u951
  2615  000A80  EF44  F005         	goto	u950
  2616  000A84                     u951:
  2617  000A84  EF70  F005         	goto	l52
  2618  000A88                     u950:
  2619  000A88                     
  2620                           ;io.c: 32:         pin -=32;
  2621  000A88  0EE0               	movlw	224
  2622  000A8A  2601               	addwf	digitalWrite@pin^0,f,c
  2623  000A8C  0EFF               	movlw	255
  2624  000A8E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  2625                           
  2626                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  2627  000A90  5003               	movf	digitalWrite@value^0,w,c
  2628  000A92  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  2629  000A94  B4D8               	btfsc	status,2,c
  2630  000A96  EF4F  F005         	goto	u961
  2631  000A9A  EF51  F005         	goto	u960
  2632  000A9E                     u961:
  2633  000A9E  EF61  F005         	goto	l1311
  2634  000AA2                     u960:
  2635  000AA2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2636  000AA6  0E01               	movlw	1
  2637  000AA8  6E06               	movwf	(??_digitalWrite+1)^0,c
  2638  000AAA  2A05               	incf	??_digitalWrite^0,f,c
  2639  000AAC  EF5A  F005         	goto	u974
  2640  000AB0                     u975:
  2641  000AB0  90D8               	bcf	status,0,c
  2642  000AB2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2643  000AB4                     u974:
  2644  000AB4  2E05               	decfsz	??_digitalWrite^0,f,c
  2645  000AB6  EF58  F005         	goto	u975
  2646  000ABA  5006               	movf	(??_digitalWrite+1)^0,w,c
  2647  000ABC  1284               	iorwf	132,f,c	;volatile
  2648  000ABE  EF70  F005         	goto	l52
  2649  000AC2                     l1311:
  2650  000AC2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  2651  000AC6  0E01               	movlw	1
  2652  000AC8  6E06               	movwf	(??_digitalWrite+1)^0,c
  2653  000ACA  2A05               	incf	??_digitalWrite^0,f,c
  2654  000ACC  EF6A  F005         	goto	u984
  2655  000AD0                     u985:
  2656  000AD0  90D8               	bcf	status,0,c
  2657  000AD2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  2658  000AD4                     u984:
  2659  000AD4  2E05               	decfsz	??_digitalWrite^0,f,c
  2660  000AD6  EF68  F005         	goto	u985
  2661  000ADA  5006               	movf	(??_digitalWrite+1)^0,w,c
  2662  000ADC  0AFF               	xorlw	255
  2663  000ADE  1684               	andwf	132,f,c	;volatile
  2664  000AE0                     l52:
  2665  000AE0  0012               	return		;funcret
  2666  000AE2                     __end_of_digitalWrite:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _digitalRead *****************
  2670 ;; Defined at:
  2671 ;;		line 39 in file "io.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  pin             2    0[COMRAM] int 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  2    0[COMRAM] int 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2, status,0
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2685 ;;      Params:         2       0       0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0       0       0
  2687 ;;      Temps:          3       0       0       0       0       0       0
  2688 ;;      Totals:         5       0       0       0       0       0       0
  2689 ;;Total ram usage:        5 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_kpDebounce
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text20
  2699  000AE2                     __ptext20:
  2700                           	callstack 0
  2701  000AE2                     _digitalRead:
  2702                           	callstack 29
  2703  000AE2                     
  2704                           ;io.c: 40:     if(pin <8){
  2705  000AE2  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2706  000AE4  EF7F  F005         	goto	u1210
  2707  000AE8  5002               	movf	(digitalRead@pin+1)^0,w,c
  2708  000AEA  E107               	bnz	u1211
  2709  000AEC  0E08               	movlw	8
  2710  000AEE  5C01               	subwf	digitalRead@pin^0,w,c
  2711  000AF0  B0D8               	btfsc	status,0,c
  2712  000AF2  EF7D  F005         	goto	u1211
  2713  000AF6  EF7F  F005         	goto	u1210
  2714  000AFA                     u1211:
  2715  000AFA  EF93  F005         	goto	l1397
  2716  000AFE                     u1210:
  2717  000AFE                     
  2718                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  2719  000AFE  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2720  000B02  0E01               	movlw	1
  2721  000B04  6E04               	movwf	(??_digitalRead+1)^0,c
  2722  000B06  2A03               	incf	??_digitalRead^0,f,c
  2723  000B08  EF88  F005         	goto	u1224
  2724  000B0C                     u1225:
  2725  000B0C  90D8               	bcf	status,0,c
  2726  000B0E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2727  000B10                     u1224:
  2728  000B10  2E03               	decfsz	??_digitalRead^0,f,c
  2729  000B12  EF86  F005         	goto	u1225
  2730  000B16  5004               	movf	(??_digitalRead+1)^0,w,c
  2731  000B18  1480               	andwf	128,w,c	;volatile
  2732  000B1A  6E05               	movwf	(??_digitalRead+2)^0,c
  2733  000B1C  5005               	movf	(??_digitalRead+2)^0,w,c
  2734  000B1E  6E01               	movwf	?_digitalRead^0,c
  2735  000B20  6A02               	clrf	(?_digitalRead+1)^0,c
  2736  000B22  EF25  F006         	goto	l56
  2737  000B26                     l1397:
  2738  000B26  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2739  000B28  EFA1  F005         	goto	u1230
  2740  000B2C  5002               	movf	(digitalRead@pin+1)^0,w,c
  2741  000B2E  E107               	bnz	u1231
  2742  000B30  0E10               	movlw	16
  2743  000B32  5C01               	subwf	digitalRead@pin^0,w,c
  2744  000B34  B0D8               	btfsc	status,0,c
  2745  000B36  EF9F  F005         	goto	u1231
  2746  000B3A  EFA1  F005         	goto	u1230
  2747  000B3E                     u1231:
  2748  000B3E  EFB7  F005         	goto	l1405
  2749  000B42                     u1230:
  2750  000B42                     
  2751                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  2752  000B42  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2753  000B46  0EF8               	movlw	-8
  2754  000B48  2603               	addwf	??_digitalRead^0,f,c
  2755  000B4A  0E01               	movlw	1
  2756  000B4C  6E04               	movwf	(??_digitalRead+1)^0,c
  2757  000B4E  2A03               	incf	??_digitalRead^0,f,c
  2758  000B50  EFAC  F005         	goto	u1244
  2759  000B54                     u1245:
  2760  000B54  90D8               	bcf	status,0,c
  2761  000B56  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2762  000B58                     u1244:
  2763  000B58  2E03               	decfsz	??_digitalRead^0,f,c
  2764  000B5A  EFAA  F005         	goto	u1245
  2765  000B5E  5004               	movf	(??_digitalRead+1)^0,w,c
  2766  000B60  1481               	andwf	129,w,c	;volatile
  2767  000B62  6E05               	movwf	(??_digitalRead+2)^0,c
  2768  000B64  5005               	movf	(??_digitalRead+2)^0,w,c
  2769  000B66  6E01               	movwf	?_digitalRead^0,c
  2770  000B68  6A02               	clrf	(?_digitalRead+1)^0,c
  2771  000B6A  EF25  F006         	goto	l56
  2772  000B6E                     l1405:
  2773  000B6E  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2774  000B70  EFC5  F005         	goto	u1250
  2775  000B74  5002               	movf	(digitalRead@pin+1)^0,w,c
  2776  000B76  E107               	bnz	u1251
  2777  000B78  0E18               	movlw	24
  2778  000B7A  5C01               	subwf	digitalRead@pin^0,w,c
  2779  000B7C  B0D8               	btfsc	status,0,c
  2780  000B7E  EFC3  F005         	goto	u1251
  2781  000B82  EFC5  F005         	goto	u1250
  2782  000B86                     u1251:
  2783  000B86  EFDB  F005         	goto	l1413
  2784  000B8A                     u1250:
  2785  000B8A                     
  2786                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  2787  000B8A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2788  000B8E  0EF0               	movlw	-16
  2789  000B90  2603               	addwf	??_digitalRead^0,f,c
  2790  000B92  0E01               	movlw	1
  2791  000B94  6E04               	movwf	(??_digitalRead+1)^0,c
  2792  000B96  2A03               	incf	??_digitalRead^0,f,c
  2793  000B98  EFD0  F005         	goto	u1264
  2794  000B9C                     u1265:
  2795  000B9C  90D8               	bcf	status,0,c
  2796  000B9E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2797  000BA0                     u1264:
  2798  000BA0  2E03               	decfsz	??_digitalRead^0,f,c
  2799  000BA2  EFCE  F005         	goto	u1265
  2800  000BA6  5004               	movf	(??_digitalRead+1)^0,w,c
  2801  000BA8  1482               	andwf	130,w,c	;volatile
  2802  000BAA  6E05               	movwf	(??_digitalRead+2)^0,c
  2803  000BAC  5005               	movf	(??_digitalRead+2)^0,w,c
  2804  000BAE  6E01               	movwf	?_digitalRead^0,c
  2805  000BB0  6A02               	clrf	(?_digitalRead+1)^0,c
  2806  000BB2  EF25  F006         	goto	l56
  2807  000BB6                     l1413:
  2808  000BB6  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2809  000BB8  EFE9  F005         	goto	u1270
  2810  000BBC  5002               	movf	(digitalRead@pin+1)^0,w,c
  2811  000BBE  E107               	bnz	u1271
  2812  000BC0  0E20               	movlw	32
  2813  000BC2  5C01               	subwf	digitalRead@pin^0,w,c
  2814  000BC4  B0D8               	btfsc	status,0,c
  2815  000BC6  EFE7  F005         	goto	u1271
  2816  000BCA  EFE9  F005         	goto	u1270
  2817  000BCE                     u1271:
  2818  000BCE  EFFF  F005         	goto	l1421
  2819  000BD2                     u1270:
  2820  000BD2                     
  2821                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  2822  000BD2  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2823  000BD6  0EE8               	movlw	-24
  2824  000BD8  2603               	addwf	??_digitalRead^0,f,c
  2825  000BDA  0E01               	movlw	1
  2826  000BDC  6E04               	movwf	(??_digitalRead+1)^0,c
  2827  000BDE  2A03               	incf	??_digitalRead^0,f,c
  2828  000BE0  EFF4  F005         	goto	u1284
  2829  000BE4                     u1285:
  2830  000BE4  90D8               	bcf	status,0,c
  2831  000BE6  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2832  000BE8                     u1284:
  2833  000BE8  2E03               	decfsz	??_digitalRead^0,f,c
  2834  000BEA  EFF2  F005         	goto	u1285
  2835  000BEE  5004               	movf	(??_digitalRead+1)^0,w,c
  2836  000BF0  1483               	andwf	131,w,c	;volatile
  2837  000BF2  6E05               	movwf	(??_digitalRead+2)^0,c
  2838  000BF4  5005               	movf	(??_digitalRead+2)^0,w,c
  2839  000BF6  6E01               	movwf	?_digitalRead^0,c
  2840  000BF8  6A02               	clrf	(?_digitalRead+1)^0,c
  2841  000BFA  EF25  F006         	goto	l56
  2842  000BFE                     l1421:
  2843  000BFE  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  2844  000C00  EF0D  F006         	goto	u1290
  2845  000C04  5002               	movf	(digitalRead@pin+1)^0,w,c
  2846  000C06  E107               	bnz	u1291
  2847  000C08  0E28               	movlw	40
  2848  000C0A  5C01               	subwf	digitalRead@pin^0,w,c
  2849  000C0C  B0D8               	btfsc	status,0,c
  2850  000C0E  EF0B  F006         	goto	u1291
  2851  000C12  EF0D  F006         	goto	u1290
  2852  000C16                     u1291:
  2853  000C16  EF23  F006         	goto	l61
  2854  000C1A                     u1290:
  2855  000C1A                     
  2856                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  2857  000C1A  C001  F003         	movff	digitalRead@pin,??_digitalRead
  2858  000C1E  0EE0               	movlw	-32
  2859  000C20  2603               	addwf	??_digitalRead^0,f,c
  2860  000C22  0E01               	movlw	1
  2861  000C24  6E04               	movwf	(??_digitalRead+1)^0,c
  2862  000C26  2A03               	incf	??_digitalRead^0,f,c
  2863  000C28  EF18  F006         	goto	u1304
  2864  000C2C                     u1305:
  2865  000C2C  90D8               	bcf	status,0,c
  2866  000C2E  3604               	rlcf	(??_digitalRead+1)^0,f,c
  2867  000C30                     u1304:
  2868  000C30  2E03               	decfsz	??_digitalRead^0,f,c
  2869  000C32  EF16  F006         	goto	u1305
  2870  000C36  5004               	movf	(??_digitalRead+1)^0,w,c
  2871  000C38  1484               	andwf	132,w,c	;volatile
  2872  000C3A  6E05               	movwf	(??_digitalRead+2)^0,c
  2873  000C3C  5005               	movf	(??_digitalRead+2)^0,w,c
  2874  000C3E  6E01               	movwf	?_digitalRead^0,c
  2875  000C40  6A02               	clrf	(?_digitalRead+1)^0,c
  2876  000C42  EF25  F006         	goto	l56
  2877  000C46                     l61:
  2878  000C46                     
  2879                           ;io.c: 51:     return -1;
  2880  000C46  6801               	setf	?_digitalRead^0,c
  2881  000C48  6802               	setf	(?_digitalRead+1)^0,c
  2882  000C4A                     l56:
  2883  000C4A  0012               	return		;funcret
  2884  000C4C                     __end_of_digitalRead:
  2885                           	callstack 0
  2886                           
  2887 ;; *************** function _atraso *****************
  2888 ;; Defined at:
  2889 ;;		line 3 in file "delay.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  x               1    wreg     unsigned char 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;  x               1    0[COMRAM] unsigned char 
  2894 ;;  i               2    1[COMRAM] volatile unsigned int 
  2895 ;;  k               1    4[COMRAM] volatile unsigned char 
  2896 ;;  j               1    3[COMRAM] volatile unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, prodl, prodh
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2906 ;;      Params:         0       0       0       0       0       0       0
  2907 ;;      Locals:         5       0       0       0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0
  2909 ;;      Totals:         5       0       0       0       0       0       0
  2910 ;;Total ram usage:        5 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text21
  2920  00107E                     __ptext21:
  2921                           	callstack 0
  2922  00107E                     _atraso:
  2923                           	callstack 30
  2924                           
  2925                           ;incstack = 0
  2926                           ;atraso@x stored from wreg
  2927  00107E  6E01               	movwf	atraso@x^0,c
  2928  001080                     
  2929                           ;delay.c: 4:     volatile unsigned char j, k;;delay.c: 5:     volatile unsigned int i;;d
      +                          elay.c: 7:     for (i = 0; i < (x*25); i++) {
  2930  001080  0E00               	movlw	0
  2931  001082  6E03               	movwf	(atraso@i+1)^0,c	;volatile
  2932  001084  0E00               	movlw	0
  2933  001086  6E02               	movwf	atraso@i^0,c	;volatile
  2934  001088  EF66  F008         	goto	l1115
  2935  00108C                     l1093:
  2936                           
  2937                           ;delay.c: 8:         for (j = 0; j < 41; j++) {
  2938  00108C  0E00               	movlw	0
  2939  00108E  6E04               	movwf	atraso@j^0,c	;volatile
  2940  001090                     l1095:
  2941  001090  0E28               	movlw	40
  2942  001092  6404               	cpfsgt	atraso@j^0,c	;volatile
  2943  001094  EF4E  F008         	goto	u531
  2944  001098  EF50  F008         	goto	u530
  2945  00109C                     u531:
  2946  00109C  EF52  F008         	goto	l1099
  2947  0010A0                     u530:
  2948  0010A0  EF64  F008         	goto	l1113
  2949  0010A4                     l1099:
  2950                           
  2951                           ;delay.c: 9:             for (k = 0; k < 3; k++);
  2952  0010A4  0E00               	movlw	0
  2953  0010A6  6E05               	movwf	atraso@k^0,c	;volatile
  2954  0010A8                     l1101:
  2955  0010A8  0E02               	movlw	2
  2956  0010AA  6405               	cpfsgt	atraso@k^0,c	;volatile
  2957  0010AC  EF5A  F008         	goto	u541
  2958  0010B0  EF5C  F008         	goto	u540
  2959  0010B4                     u541:
  2960  0010B4  EF5E  F008         	goto	l1105
  2961  0010B8                     u540:
  2962  0010B8  EF61  F008         	goto	l1109
  2963  0010BC                     l1105:
  2964  0010BC  2A05               	incf	atraso@k^0,f,c	;volatile
  2965  0010BE  EF54  F008         	goto	l1101
  2966  0010C2                     l1109:
  2967                           
  2968                           ;delay.c: 10:         }
  2969  0010C2  2A04               	incf	atraso@j^0,f,c	;volatile
  2970  0010C4  EF48  F008         	goto	l1095
  2971  0010C8                     l1113:
  2972                           
  2973                           ;delay.c: 11:     }
  2974  0010C8  4A02               	infsnz	atraso@i^0,f,c	;volatile
  2975  0010CA  2A03               	incf	(atraso@i+1)^0,f,c	;volatile
  2976  0010CC                     l1115:
  2977  0010CC  5001               	movf	atraso@x^0,w,c
  2978  0010CE  0D19               	mullw	25
  2979  0010D0  50F3               	movf	243,w,c
  2980  0010D2  5C02               	subwf	atraso@i^0,w,c	;volatile
  2981  0010D4  50F4               	movf	244,w,c
  2982  0010D6  5803               	subwfb	(atraso@i+1)^0,w,c	;volatile
  2983  0010D8  A0D8               	btfss	status,0,c
  2984  0010DA  EF71  F008         	goto	u551
  2985  0010DE  EF73  F008         	goto	u550
  2986  0010E2                     u551:
  2987  0010E2  EF46  F008         	goto	l1093
  2988  0010E6                     u550:
  2989  0010E6  0012               	return		;funcret
  2990  0010E8                     __end_of_atraso:
  2991                           	callstack 0
  2992                           
  2993                           	psect	rparam
  2994  0000                     
  2995                           	psect	idloc
  2996                           
  2997                           ;Config register IDLOC0 @ 0x200000
  2998                           ;	unspecified, using default values
  2999  200000                     	org	2097152
  3000  200000  FF                 	db	255
  3001                           
  3002                           ;Config register IDLOC1 @ 0x200001
  3003                           ;	unspecified, using default values
  3004  200001                     	org	2097153
  3005  200001  FF                 	db	255
  3006                           
  3007                           ;Config register IDLOC2 @ 0x200002
  3008                           ;	unspecified, using default values
  3009  200002                     	org	2097154
  3010  200002  FF                 	db	255
  3011                           
  3012                           ;Config register IDLOC3 @ 0x200003
  3013                           ;	unspecified, using default values
  3014  200003                     	org	2097155
  3015  200003  FF                 	db	255
  3016                           
  3017                           ;Config register IDLOC4 @ 0x200004
  3018                           ;	unspecified, using default values
  3019  200004                     	org	2097156
  3020  200004  FF                 	db	255
  3021                           
  3022                           ;Config register IDLOC5 @ 0x200005
  3023                           ;	unspecified, using default values
  3024  200005                     	org	2097157
  3025  200005  FF                 	db	255
  3026                           
  3027                           ;Config register IDLOC6 @ 0x200006
  3028                           ;	unspecified, using default values
  3029  200006                     	org	2097158
  3030  200006  FF                 	db	255
  3031                           
  3032                           ;Config register IDLOC7 @ 0x200007
  3033                           ;	unspecified, using default values
  3034  200007                     	org	2097159
  3035  200007  FF                 	db	255
  3036                           
  3037                           	psect	config
  3038                           
  3039                           ; Padding undefined space
  3040  300000                     	org	3145728
  3041  300000  FF                 	db	255
  3042                           
  3043                           ;Config register CONFIG1H @ 0x300001
  3044                           ;	Oscillator Selection bits
  3045                           ;	OSC = HS, HS oscillator
  3046                           ;	Fail-Safe Clock Monitor Enable bit
  3047                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3048                           ;	Internal/External Oscillator Switchover bit
  3049                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3050  300001                     	org	3145729
  3051  300001  02                 	db	2
  3052                           
  3053                           ;Config register CONFIG2L @ 0x300002
  3054                           ;	Power-up Timer Enable bit
  3055                           ;	PWRT = OFF, PWRT disabled
  3056                           ;	Brown-out Reset Enable bits
  3057                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3058                           ;	Brown Out Reset Voltage bits
  3059                           ;	BORV = 0x2E, user specified literal
  3060  300002                     	org	3145730
  3061  300002  71                 	db	369
  3062                           
  3063                           ;Config register CONFIG2H @ 0x300003
  3064                           ;	Watchdog Timer Enable bit
  3065                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3066                           ;	Watchdog Timer Postscale Select bits
  3067                           ;	WDTPS = 1, 1:1
  3068  300003                     	org	3145731
  3069  300003  00                 	db	0
  3070                           
  3071                           ; Padding undefined space
  3072  300004                     	org	3145732
  3073  300004  FF                 	db	255
  3074                           
  3075                           ;Config register CONFIG3H @ 0x300005
  3076                           ;	CCP2 MUX bit
  3077                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3078                           ;	PORTB A/D Enable bit
  3079                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3080                           ;	Low-Power Timer1 Oscillator Enable bit
  3081                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3082                           ;	MCLR Pin Enable bit
  3083                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3084  300005                     	org	3145733
  3085  300005  83                 	db	131
  3086                           
  3087                           ;Config register CONFIG4L @ 0x300006
  3088                           ;	Stack Full/Underflow Reset Enable bit
  3089                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3090                           ;	Single-Supply ICSP Enable bit
  3091                           ;	LVP = OFF, Single-Supply ICSP disabled
  3092                           ;	Extended Instruction Set Enable bit
  3093                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3094                           ;	Background Debugger Enable bit
  3095                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3096  300006                     	org	3145734
  3097  300006  80                 	db	128
  3098                           
  3099                           ; Padding undefined space
  3100  300007                     	org	3145735
  3101  300007  FF                 	db	255
  3102                           
  3103                           ;Config register CONFIG5L @ 0x300008
  3104                           ;	Code Protection bit
  3105                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3106                           ;	Code Protection bit
  3107                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3108                           ;	Code Protection bit
  3109                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3110                           ;	Code Protection bit
  3111                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3112  300008                     	org	3145736
  3113  300008  0F                 	db	15
  3114                           
  3115                           ;Config register CONFIG5H @ 0x300009
  3116                           ;	Boot Block Code Protection bit
  3117                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3118                           ;	Data EEPROM Code Protection bit
  3119                           ;	CPD = OFF, Data EEPROM not code-protected
  3120  300009                     	org	3145737
  3121  300009  C0                 	db	192
  3122                           
  3123                           ;Config register CONFIG6L @ 0x30000A
  3124                           ;	Write Protection bit
  3125                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3126                           ;	Write Protection bit
  3127                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3128                           ;	Write Protection bit
  3129                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3130                           ;	Write Protection bit
  3131                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3132  30000A                     	org	3145738
  3133  30000A  0F                 	db	15
  3134                           
  3135                           ;Config register CONFIG6H @ 0x30000B
  3136                           ;	Configuration Register Write Protection bit
  3137                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3138                           ;	Boot Block Write Protection bit
  3139                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3140                           ;	Data EEPROM Write Protection bit
  3141                           ;	WRTD = OFF, Data EEPROM not write-protected
  3142  30000B                     	org	3145739
  3143  30000B  E0                 	db	224
  3144                           
  3145                           ;Config register CONFIG7L @ 0x30000C
  3146                           ;	Table Read Protection bit
  3147                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3148                           ;	Table Read Protection bit
  3149                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3150                           ;	Table Read Protection bit
  3151                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3152                           ;	Table Read Protection bit
  3153                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3154  30000C                     	org	3145740
  3155  30000C  0F                 	db	15
  3156                           
  3157                           ;Config register CONFIG7H @ 0x30000D
  3158                           ;	Boot Block Table Read Protection bit
  3159                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3160  30000D                     	org	3145741
  3161  30000D  40                 	db	64
  3162                           tosu	equ	0xFFF
  3163                           tosh	equ	0xFFE
  3164                           tosl	equ	0xFFD
  3165                           stkptr	equ	0xFFC
  3166                           pclatu	equ	0xFFB
  3167                           pclath	equ	0xFFA
  3168                           pcl	equ	0xFF9
  3169                           tblptru	equ	0xFF8
  3170                           tblptrh	equ	0xFF7
  3171                           tblptrl	equ	0xFF6
  3172                           tablat	equ	0xFF5
  3173                           prodh	equ	0xFF4
  3174                           prodl	equ	0xFF3
  3175                           indf0	equ	0xFEF
  3176                           postinc0	equ	0xFEE
  3177                           postdec0	equ	0xFED
  3178                           preinc0	equ	0xFEC
  3179                           plusw0	equ	0xFEB
  3180                           fsr0h	equ	0xFEA
  3181                           fsr0l	equ	0xFE9
  3182                           wreg	equ	0xFE8
  3183                           indf1	equ	0xFE7
  3184                           postinc1	equ	0xFE6
  3185                           postdec1	equ	0xFE5
  3186                           preinc1	equ	0xFE4
  3187                           plusw1	equ	0xFE3
  3188                           fsr1h	equ	0xFE2
  3189                           fsr1l	equ	0xFE1
  3190                           bsr	equ	0xFE0
  3191                           indf2	equ	0xFDF
  3192                           postinc2	equ	0xFDE
  3193                           postdec2	equ	0xFDD
  3194                           preinc2	equ	0xFDC
  3195                           plusw2	equ	0xFDB
  3196                           fsr2h	equ	0xFDA
  3197                           fsr2l	equ	0xFD9
  3198                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    30
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     26      33
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@msg	PTR unsigned char  size(2) Largest target is 38
		 -> STR_1(CODE[38]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_lcdChar
    _printf->_lcdCommand
    _lcdChar->_pushByte
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   79810
                                             20 COMRAM     6     6      0
                             _atraso
                       _digitalWrite
                         _kpDebounce
                             _kpInit
                             _kpRead
                          _kpReadKey
                            _lcdInit
                            _pinMode
                             _printf
                             _soInit
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     4      2   25998
                                             14 COMRAM     6     4      2
                            _lcdChar
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   12887
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   29492
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   12593
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   12857
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   12485
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    2648
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpReadKey                                            5     5      0      60
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    3312
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _soInit                                               0     0      0    1656
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    1656
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0    7813
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _soWrite                                              3     1      2    7329
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _PulseEnClock                                         0     0      0    2268
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _PulseClockData                                       0     0      0    2268
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _digitalWrite                                         6     2      4    2268
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _atraso                                               5     5      0      90
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _atraso
   _digitalWrite
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _kpReadKey
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
       _delayMili
       _pushByte
         _digitalWrite
         _pulseEnablePin
           _delayMicro
           _digitalWrite
         _soWrite
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _pinMode
   _printf
     _lcdChar
       _delayMicro
       _pushByte
     _lcdCommand
   _soInit
   _soWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     1A      21       1       26.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      21      15        0.0%
DATA                 0      0      21       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Dec 17 15:38:25 2021

         _pulseEnablePin 1190                       l10 10E6                       l52 0AE0  
                     l61 0C46                       l56 0C4A                       l57 0C46  
                     l86 0892                      l103 134A                      l123 0D68  
                    l125 0D80                      l109 107C                      l151 12EA  
                    l128 1240                      l208 1004                      l145 1270  
                    l154 1140                      l139 134C                      l148 11D0  
                    l180 0F60                      l157 1326                      l165 1308  
                    l190 129A                      l193 12C4                      l187 120E  
                    l198 118E                      u530 10A0                      u531 109C  
                    u540 10B8                      u541 10B4                      u550 10E6  
                    u551 10E2                      u800 08C2                      u801 08BE  
                    u570 1046                      u571 1042                      u580 107A  
                    u564 1026                      u581 1076                      u565 1020  
                    u910 0A10                      u830 0920                      u814 08D4  
                    u911 0A0C                      u831 091C                      u815 08D0  
                    u920 0A2A                      u904 09E4                      u840 093A  
                    u824 08F4                      u921 0A26                      u905 09E0  
                    u841 0936                      u825 08F0                      u950 0A88  
                    u934 0A3C                      u870 0998                      u854 094C  
                    u790 08B0                      u951 0A84                      u935 0A38  
                    u871 0994                      u855 0948                      u791 08AC  
                    u960 0AA2                      u944 0A5C                      u880 09B2  
                    u864 096C                      u961 0A9E                      u945 0A58  
                    u881 09AE                      u865 0968                      u974 0AB4  
                    u894 09C4                      u990 118A                      u975 0AB0  
                    u895 09C0                      u991 1186                      u984 0AD4  
                    u985 0AD0                      wreg 000FE8                     l1101 10A8  
                   l1105 10BC                     l1113 10C8                     l1115 10CC  
                   l1131 105A                     l1109 10C2                     l1301 0A2A  
                   l1133 105E                     l1125 100E                     l1311 0AC2  
                   l1303 0A4A                     l1135 107A                     l1127 1046  
                   l1119 1006                     l1305 0A6C                     l1313 1272  
                   l1091 1080                     l1307 0A88                     l1315 129C  
                   l1331 117A                     l1093 108C                     l1421 0BFE  
                   l1413 0BB6                     l1405 0B6E                     l1309 0AA2  
                   l1333 118A                     l1325 115A                     l1317 1142  
                   l1341 0646                     l1501 0FBE                     l1095 1090  
                   l1423 0C1A                     l1415 0BD2                     l1407 0B8A  
                   l1327 1172                     l1319 1156                     l1351 06D2  
                   l1343 0662                     l1335 1190                     l1431 130C  
                   l1503 0FC8                     l1281 0904                     l1273 0894  
                   l1329 1178                     l1441 0C5C                     l1361 075C  
                   l1353 06E4                     l1345 0674                     l1337 11A4  
                   l1433 12EE                     l1505 0FE4                     l1099 10A4  
                   l1291 0998                     l1283 0920                     l1275 08B0  
                   l1451 0D0C                     l1371 07F8                     l1363 0780  
                   l1355 0708                     l1347 0694                     l1427 11D2  
                   l1339 11B0                     l1435 12FC                     l1507 0FE8  
                   l1531 0D82                     l1293 09B2                     l1285 093A  
                   l1277 08C2                     l1461 0D5C                     l1453 0D36  
                   l1445 0C7C                     l1373 081E                     l1365 07A6  
                   l1357 072E                     l1349 06B6                     l1437 1342  
                   l1381 1242                     l1429 12C8                     l1541 0DB4  
                   l1533 0D8E                     l1391 0AFE                     l1295 09D2  
                   l1287 095A                     l1279 08E2                     l1463 0D60  
                   l1447 0CC8                     l1439 0C4C                     l1375 083A  
                   l1367 07C2                     l1359 074A                     l1383 124E  
                   l1471 0EAE                     l1551 0DF4                     l1543 0DB8  
                   l1535 0D90                     l1297 09F4                     l1289 097C  
                   l1465 0D78                     l1449 0CEE                     l1457 0D3E  
                   l1377 084C                     l1369 07D4                     l1385 1252  
                   l1481 0F4E                     l1473 0F0E                     l1561 0E48  
                   l1553 0E1E                     l1545 0DBC                     l1537 0D94  
                   l1299 0A10                     l1459 0D56                     l1379 0870  
                   l1467 1210                     l1387 10EA                     l1483 0F54  
                   l1475 0F1A                     l1571 0E9E                     l1563 0E5C  
                   l1555 0E24                     l1547 0DC8                     l1539 0DA0  
                   l1397 0B26                     l1389 0AE2                     l1469 123C  
                   l1485 0F5A                     l1477 0F34                     l1493 0F6A  
                   l1565 0E64                     l1557 0E28                     l1549 0DDC  
                   l1399 0B42                     l1479 0F42                     l1487 0F62  
                   l1567 0E76                     l1559 0E3C                     l1569 0E8A  
                   l1499 0F96                     STR_1 061F                     u1000 0662  
                   u1001 065E                     u1010 0674                     u1011 0670  
                   u1120 07C2                     u1104 0772                     u1040 06D2  
                   u1024 0686                     u1200 1270                     u1121 07BE  
                   u1105 076E                     u1041 06CE                     u1025 0682  
                   u1201 126C                     u1210 0AFE                     u1130 07D4  
                   u1114 0796                     u1050 06E4                     u1034 06A6  
                   u1211 0AFA                     u1131 07D0                     u1115 0792  
                   u1051 06E0                     u1035 06A2                     u1230 0B42  
                   u1310 0C78                     u1231 0B3E                     u1311 0C74  
                   u1304 0C30                     u1224 0B10                     u1160 083A  
                   u1144 07EA                     u1080 074A                     u1064 06FA  
                   u1400 0FBE                     u1305 0C2C                     u1225 0B0C  
                   u1161 0836                     u1145 07E6                     u1081 0746  
                   u1065 06F6                     u1401 0FBA                     u1250 0B8A  
                   u1330 0CC8                     u1170 084C                     u1154 080E  
                   u1090 075C                     u1074 071E                     u1410 1004  
                   u1251 0B86                     u1331 0CC4                     u1171 0848  
                   u1155 080A                     u1091 0758                     u1075 071A  
                   u1411 1000                     u1244 0B58                     u1324 0C98  
                   u1500 0E9E                     u1245 0B54                     u1325 0C92  
                   u1501 0E9A                     u1270 0BD2                     u1350 0D0C  
                   u1271 0BCE                     u1351 0D08                     u1264 0BA0  
                   u1344 0CE0                     u1184 0862                     u1265 0B9C  
                   u1345 0CDA                     u1185 085E                     u1290 0C1A  
                   u1370 0D56                     u1194 0886                     u1291 0C16  
                   u1371 0D52                     u1195 0882                     u1284 0BE8  
                   u1380 0D78                     u1364 0D28                     u1460 0E3C  
                   u1285 0BE4                     u1381 0D74                     u1365 0D22  
                   u1461 0E38                     u1390 0F92                     u1470 0E5C  
                   u1391 0F8E                     u1471 0E58                     u1480 0E76  
                   u1481 0E72                     u1490 0E8A                     u1491 0E86  
                   _main 0D82                     _leds 061B                     _keys 001F  
       ??_PulseClockData 0007                     prodh 000FF4                     prodl 000FF3  
                   start 0000          pushNibble@value 000C             ___param_bank 000000  
 __end_of_pulseEnablePin 11D2                    ?_main 0001                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 130A          __end_of_lcdInit 0F62  
        __end_of_pinMode 0894                    _valor 0601          __end_of_soWrite 1190  
                  tablat 000FF5                    status 000FD8             pushNibble@rs 000A  
   __end_of_digitalWrite 0AE2          __initialization 1328          ?_pulseEnablePin 0001  
           __end_of_main 0EAE             __end_of_leds 061F                   ??_main 0015  
          __activetblptr 000001     __size_of_digitalRead 016A                   _ADCON1 000FC1  
                 _kpInit 1210                   _kpRead 1342                   _atraso 107E  
                 clear_0 132E                   _soInit 11D2                ??_lcdChar 000E  
                 isa$std 000001                ??_lcdInit 000F                   _printf 0F62  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
       __end_of_pushByte 1142               __accesstop 0080  __end_of__initialization 1334  
          ___rparam_used 000001            pushByte@value 000D              pinMode@type 0003  
         __pcstackCOMRAM 0001            __end_of_valor 0611       __size_of_delayMili 0030  
     __size_of_kpReadKey 0078    __size_of_digitalWrite 024E               _delayMicro 134C  
             _lcdCommand 130A                  ?_kpInit 0001                  ?_kpRead 0001  
                ?_atraso 0001                  ?_soInit 0001               _kpDebounce 0C4C  
                ?_printf 000F             _digitalWrite 0894        __end_of_delayMili 1272  
       ??_pulseEnablePin 0007                  __Hparam 0000                  __Lparam 0000  
        kpDebounce@tempo 0021        __end_of_kpReadKey 107E                ?_pushByte 000A  
           __psmallconst 0600          __size_of_kpInit 0032          __size_of_kpRead 000A  
                _charKey 0611          __size_of_atraso 006A                  __pcinit 1328  
                _lcdChar 12EC                  __ramtop 0600          __size_of_soInit 003E  
                _lcdInit 0EAE                  __ptext0 0D82                  __ptext1 0F62  
                __ptext2 12EC                  __ptext3 0EAE                  __ptext4 12C6  
                __ptext5 130A                  __ptext6 10E8                  __ptext7 1190  
                __ptext8 134C                  __ptext9 1242          __size_of_printf 00A4  
                _pinMode 0646               delayMili@a 0001               delayMili@i 0004  
                _soWrite 1142                  atraso@i 0002                  atraso@j 0004  
                atraso@k 0005                  atraso@x 0001     end_of_initialization 1334  
          ?_PulseEnClock 0001           digitalRead@pin 0001              ?_delayMicro 0001  
                printf@i 0013              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
            ?_kpDebounce 0001               _pushNibble 12C6           ??_PulseEnClock 0007  
             kpReadKey@i 0004           __end_of_kpInit 1242           __end_of_kpRead 134C  
         __end_of_atraso 10E8           __end_of_soInit 1210           __end_of_printf 1006  
    __size_of_delayMicro 0002      start_initialization 1328      __end_of_digitalRead 0C4C  
    __size_of_lcdCommand 001E      __size_of_kpDebounce 0136        kpDebounce@oldRead 001B  
      kpDebounce@newRead 001D                 ??_kpInit 0007                 ??_kpRead 0003  
               ??_atraso 0001                 ??_soInit 0007                 ??_printf 0011  
            __pbssCOMRAM 001B              ?_pushNibble 000A               pinMode@pin 0001  
              _delayMili 1242           _PulseClockData 129C     __end_of_PulseEnClock 129C  
            _digitalRead 0AE2                 ?_lcdChar 0001        __size_of_pushByte 005A  
               ?_lcdInit 0001                _kpReadKey 1006              __smallconst 0600  
               ?_pinMode 0001                 ?_soWrite 0007             ??_delayMicro 0003  
             ?_delayMili 0001   __end_of_PulseClockData 12C6      __size_of_pushNibble 0026  
           ??_lcdCommand 000E             ??_kpDebounce 000A               ?_kpReadKey 0001  
              main@andar 0019          lcdCommand@value 000E       __end_of_delayMicro 134E  
     __end_of_lcdCommand 1328               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 0D82                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0600          ?_PulseClockData 0001  __size_of_pulseEnablePin 0042  
       __size_of_lcdChar 001E         __size_of_lcdInit 00B4         __size_of_pinMode 024E  
               __ptext10 1006                 __ptext11 1342                 __ptext20 0AE2  
               __ptext12 1210                 __ptext21 107E                 __ptext13 11D2  
               __ptext14 0646                 __ptext15 0C4C                 __ptext16 1142  
               __ptext17 1272                 __ptext18 129C                 __ptext19 0894  
       __size_of_soWrite 004E            __size_of_main 012C              ??_delayMili 0003  
  __size_of_PulseEnClock 002A              delayMicro@a 0001                 isa$xinst 000000  
           soWrite@value 0007                 _pushByte 10E8                printf@msg 000F  
            ??_kpReadKey 0001             ??_pushNibble 000C            ?_digitalWrite 0001  
           _PulseEnClock 1272        digitalWrite@value 0003                 soWrite@i 0009  
     __end_of_pushNibble 12EC             ?_digitalRead 0001              kpDebounce@i 000D  
         ??_digitalWrite 0005          digitalWrite@pin 0001  
